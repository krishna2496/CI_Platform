{
  "swagger": "2.0",
  "info": {
    "version": "",
    "title": "CI Platform",
    "description": ""
  },
  "host": "ci-api-doc-service",
  "basePath": "/cip/api",
  "tags": [
    {
      "name": "Mission"
    },
    {
      "name": "Mission Comment"
    },
    {
      "name": "Mission application"
    },
    {
      "name": "Footer pages"
    },
    {
      "name": "Policy pages"
    },
    {
      "name": "User"
    },
    {
      "name": "User skills"
    },
    {
      "name": "User setting"
    },
    {
      "name": "Theme management"
    },
    {
      "name": "Skill management"
    },
    {
      "name": "Tenant - Admin"
    },
    {
      "name": "Tenant - App"
    },
    {
      "name": "Volunteering Timesheet"
    },
    {
      "name": "Volunteering History"
    },
    {
      "name": "News"
    },
    {
      "name": "Story"
    },
    {
      "name": "Dashboard - Comment History"
    },
    {
      "name": "User Dashboard"
    },
    {
      "name": "Messages"
    },
    {
      "name": "Notifications"
    },
    {
      "name": "Activity Log"
    },
    {
      "name": "Availability"
    },
    {
      "name": "Country"
    },
    {
      "name": "City"
    },
    {
      "name": "Timezone"
    },
    {
      "name": "Organizations"
    },
    {
      "name": "Translations"
    },
    {
      "name": "Statistics"
    }
  ],
  "paths": {
    "/missions?search={searchText}": {
      "get": {
        "operationId": "GET_team4-cip-api-missions",
        "summary": "Admin - Missions Listing (Milestone - 1)",
        "description": "This API will list all missions for backend interface. To filter missions by title, short description or organisation name append 'search' in URL. Example: /missions&search=Plantation",
        "tags": [
          "Mission"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "searchText",
            "in": "path",
            "required": false,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "default": {
            "description": "",
            "schema": {}
          }
        }
      }
    },
    "/missions": {
      "post": {
        "operationId": "POST_team4-cip-api-missions",
        "summary": "Admin - Create Mission (Milestone - 1)",
        "description": "New mission can be created using this endpoint.",
        "tags": [
          "Mission"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Mission"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "422": {
            "description": "Unprocessable entity - Invalid input"
          },
          "502": {
            "description": "Bad Gateway - Database operational error"
          }
        }
      }
    },
    "/missions/{missionId}": {
      "get": {
        "operationId": "GET_team4-cip-api-missions_get_by_id",
        "summary": "Admin - Get mission detail by ID (Milestone - 1)",
        "description": "It will show mission details by mission id",
        "tags": [
          "Mission"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "missionId",
            "in": "path",
            "description": "Mission id to get detail",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "404": {
            "description": "Mission not found in the system"
          }
        }
      },
      "patch": {
        "operationId": "PATCH_team4-cip-api-missions-1",
        "summary": "Admin - Update mission (Milestone - 1)",
        "description": "Update mission details",
        "tags": [
          "Mission"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MissionUpdate"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "missionId",
            "in": "path",
            "description": "Mission id to update",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "404": {
            "description": "Mission not found in the system"
          },
          "422": {
            "description": "Unprocessable entity - Invalid input"
          },
          "502": {
            "description": "Bad Gateway - Database operational error"
          }
        }
      },
      "delete": {
        "operationId": "DELETE_team4-cip-api-missions-8",
        "summary": "Admin - Delete mission (Milestone - 1)",
        "description": "Delete mission",
        "tags": [
          "Mission"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "missionId",
            "in": "path",
            "description": "Mission id to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden - Mission deletion failed"
          },
          "404": {
            "description": "Not Found - Requested mission does not exist"
          }
        }
      }
    },
    "/missions/media/{mediaId}": {
      "delete": {
        "operationId": "DELETE_team4-cip-api-missions-media",
        "summary": "Admin - Delete mission media",
        "description": "Delete mission media or video",
        "tags": [
          "Mission"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "mediaId",
            "in": "path",
            "description": "Media id to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden - Media deletion failed"
          },
          "404": {
            "description": "Not Found - Requested media does not exist"
          }
        }
      }
    },
    "/missions/document/{documentId}": {
      "delete": {
        "operationId": "DELETE_team4-cip-api-missions-document",
        "summary": "Admin - Delete mission document",
        "description": "Delete mission document",
        "tags": [
          "Mission"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "documentId",
            "in": "path",
            "description": "Document id to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden - Document deletion failed"
          },
          "404": {
            "description": "Not Found - Requested document does not exist"
          }
        }
      }
    },
    "/missions/mission-tabs/{missionTabId}/": {
      "delete": {
        "operationId": "delete_cip-api-delete-mission-tab",
        "summary": "Admin - Delete mission tab",
        "description": "Delete mission tab by missionTabId",
        "tags": [
          "Mission"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "missionTabId",
            "in": "path",
            "description": "mission_tab_id to delete",
            "type": "string",
            "default": "",
            "required": true
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden - mission tab deletion failed"
          },
          "404": {
            "description": "Not Found - Requested mission tab id does not exist"
          }
        }
      }
    },
    "/missions/mission-impact/{missionImpactId}/": {
      "delete": {
        "operationId": "delete_cip-api-delete-mission-impact",
        "summary": "Admin - Delete mission impact",
        "description": "Delete mission impact by missionImpactId",
        "tags": [
          "Mission"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "missionImpactId",
            "in": "path",
            "description": "mission_impact_id to delete",
            "type": "string",
            "default": "",
            "required": true
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden - mission impact deletion failed"
          },
          "404": {
            "description": "Not Found - Requested mission impact id does not exist"
          }
        }
      }
    },
    "/missions/impact-donation/{missionImpactDonationId}/": {
      "delete": {
        "operationId": "delete_cip-api-delete-mission-impact-donation",
        "summary": "Admin - Delete mission impact donation",
        "description": "Delete mission impact donation by missionImpactDonationId",
        "tags": [
          "Mission"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "missionImpactDonationId",
            "in": "path",
            "description": "mission_impact_donation_id to delete",
            "type": "string",
            "default": "",
            "required": true
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden - mission impact donation deletion failed"
          },
          "404": {
            "description": "Not Found - Requested mission impact donation id does not exist"
          }
        }
      }
    },
    "/app/missions?country_id={country_id}&city_id={city_id}&theme_id={theme_id}&skill_id={skill_id}&sort_by={sort_by}": {
      "get": {
        "operationId": "GET_team4-cip-api-app-missions-listing",
        "summary": "App - Listing of missions (Milestone - 1)",
        "description": "Mission listing on platform landing page",
        "tags": [
          "Mission"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "with_donation_statistics",
            "in": "path",
            "description": "Enable to add donation statistics data on the response",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "country_id",
            "in": "path",
            "description": "Country ID",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "city_id",
            "in": "path",
            "description": "City ID",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "theme_id",
            "in": "path",
            "description": "Theme ID",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "skill_id",
            "in": "path",
            "description": "Skill ID",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "sort_by",
            "in": "path",
            "description": "These are values: newest, oldest, lowest_available_seats, highest_available_seats, my_favourite, deadline",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - Invalid token"
          }
        }
      }
    },
    "/app/mission/favourite": {
      "post": {
        "operationId": "GET_team4-cip-api-missions-favourite",
        "summary": "App - Add/Remove favourite mission (Milestone - 2)",
        "description": "Logged in user can add/remove any mission from favourite list",
        "tags": [
          "Mission"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "mission_id": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - Invalid token"
          },
          "404": {
            "description": "Mission not found in the system"
          }
        }
      }
    },
    "/app/mission/invite": {
      "post": {
        "operationId": "GET_team4-cip-api-invite-mission",
        "summary": "App - Recommend mission to co-worker(Invite to a colleague) (Milestone - 2)",
        "tags": [
          "Mission"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "mission_id": {
                  "type": "integer",
                  "format": "int64"
                },
                "to_user_id": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - Invalid token"
          },
          "404": {
            "description": "Mission not found in the system"
          },
          "422": {
            "description": "Invalid input data"
          }
        }
      }
    },
    "/app/mission/rating": {
      "post": {
        "operationId": "GET_team4-cip-api-app-store-mission-rating",
        "summary": "App - Add/Edit mission ratings(0-5) (Milestone - 2)",
        "description": "Give ratings from 0-5 to a mission",
        "tags": [
          "Mission"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "mission_id": {
                  "type": "integer",
                  "format": "int64"
                },
                "rating": {
                  "type": "number",
                  "format": "float"
                }
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - Invalid token"
          },
          "404": {
            "description": "Mission not found in the system"
          },
          "422": {
            "description": "Invalid input data"
          }
        }
      }
    },
    "/app/mission/{missionId}": {
      "get": {
        "operationId": "GET_team4-cip-api-get-mission-detail",
        "summary": "App - Get mission detail (Milestone - 2)",
        "description": "Mission detail page",
        "tags": [
          "Mission"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "with_donation_statistics",
            "in": "path",
            "description": "Enable to add donation statistics data on the response",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "missionId",
            "in": "path",
            "description": "Mission id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - Invalid token"
          },
          "404": {
            "description": "Mission not found in the system"
          }
        }
      }
    },
    "/app/related-missions/{missionId}": {
      "get": {
        "operationId": "GET_team4-cip-api-get-related-mission",
        "summary": "App - Get related missions (Milestone - 2)",
        "description": "It will fetch related missions based on given mission id.",
        "tags": [
          "Mission"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "missionId",
            "in": "path",
            "description": "Mission id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - Invalid token"
          },
          "404": {
            "description": "Mission not found in the system"
          }
        }
      }
    },
    "/app/mission-media/{missionId}": {
      "get": {
        "operationId": "GET_team4-cip-api-get-mission-media",
        "summary": "App - Get mission media (Milestone - 2)",
        "description": "Fetch mission media such as images and videos",
        "tags": [
          "Mission"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "missionId",
            "in": "path",
            "description": "Mission id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - Invalid token"
          },
          "404": {
            "description": "Mission not found in the system"
          }
        }
      }
    },
    "/missions/{missionId}/comments": {
      "get": {
        "operationId": "GET_team4-cip-api-admin-get-mission-comments",
        "summary": "Admin - Get mission comments (Milestone - 3)",
        "tags": [
          "Mission Comment"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "missionId",
            "in": "path",
            "description": "Mission id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "404": {
            "description": "Requested mission not found"
          }
        }
      }
    },
    "/missions/{missionId}/comments/{commentId}": {
      "get": {
        "operationId": "GET_team4-cip-api-admin-get-mission-comment-detail",
        "summary": "Admin - View mission comment detail (Milestone - 3)",
        "tags": [
          "Mission Comment"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "missionId",
            "in": "path",
            "description": "Mission id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "commentId",
            "in": "path",
            "description": "Comment id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "404": {
            "description": "Requested mission not found"
          }
        }
      },
      "patch": {
        "operationId": "GET_team4-cip-api-approve-decline-mission-comment",
        "summary": "Admin - Approve/Decline mission comment (Milestone - 3)",
        "description": "Admin can approve/decline user's posted comment on a mission",
        "tags": [
          "Mission Comment"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "missionId",
            "in": "path",
            "description": "Mission id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "commentId",
            "in": "path",
            "description": "Comment id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "approval_status": {
                  "type": "string",
                  "enum": [
                    "PUBLISHED",
                    "DECLINED"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - Invalid token"
          },
          "404": {
            "description": "Requested mission not found"
          }
        }
      },
      "delete": {
        "operationId": "GET_team4-cip-api-admin-delete-mission-comment",
        "summary": "Admin - Remove mission comment (Milestone - 3)",
        "description": "Admin can remove/delete user's comment on a mission",
        "tags": [
          "Mission Comment"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "missionId",
            "in": "path",
            "description": "Mission id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "commentId",
            "in": "path",
            "description": "Comment id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "404": {
            "description": "Requested mission not found"
          }
        }
      }
    },
    "/app/mission/{missionId}/comments": {
      "get": {
        "operationId": "GET_team4-cip-api-get-mission-comments",
        "summary": "App - Get mission comments (Milestone - 3)",
        "description": "Fetch approved mission comments to show on mission detail page",
        "tags": [
          "Mission Comment"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "missionId",
            "in": "path",
            "description": "Mission id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - Invalid token"
          },
          "404": {
            "description": "Mission not found in the system"
          }
        }
      }
    },
    "/app/mission/comment": {
      "post": {
        "operationId": "GET_team4-cip-api-store-mission-comment",
        "summary": "App - Post comment to a mission (Milestone - 3)",
        "description": "Logged in user can post comment to a mission",
        "tags": [
          "Mission Comment"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "mission_id": {
                  "type": "integer",
                  "format": "int64"
                },
                "comment": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - Invalid token"
          },
          "404": {
            "description": "Requested mission not found"
          },
          "422": {
            "description": "Invalid input data"
          }
        }
      }
    },
    "/missions/{missionId}/applications?status={status}&user_id={userId}&type={type}&order={order}": {
      "get": {
        "operationId": "GET_team4-cip-api-missions-2-applications",
        "summary": "Admin - List of mission's applications (Milestone - 1)",
        "description": "Admin can view list of applications on a mission",
        "tags": [
          "Mission application"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "missionId",
            "in": "path",
            "description": "Mission id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "status",
            "in": "path",
            "description": "AUTOMATICALLY_APPROVED, PENDING, REFUSED",
            "required": false,
            "type": "string",
            "default": ""
          },
          {
            "name": "userId",
            "in": "path",
            "description": "Applicant or user id",
            "required": false,
            "type": "integer",
            "format": "int64",
            "default": ""
          },
          {
            "name": "type",
            "in": "path",
            "description": "Mission type - TIME or GOAL",
            "required": false,
            "type": "string",
            "default": ""
          },
          {
            "name": "order",
            "in": "path",
            "description": "asc or desc",
            "required": false,
            "type": "string",
            "default": "asc"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          }
        }
      }
    },
    "/missions/applications/details": {
      "get": {
        "operationId": "GET_team4-cip-api-missions-2-applications-details",
        "summary": "Admin - List of mission's applications with details (Milestone - 1)",
        "description": "Admin can view list of applications on a mission with details",
        "tags": [
          "Mission application"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "search",
            "in": "path",
            "description": "Search user first_name, last_name and email, mission language title, city and country language name, mission themes translations and name",
            "required": false,
            "type": "string"
          },
          {
            "name": "order[orderBy]",
            "in": "path",
            "description": "Field name for ordering",
            "required": false,
            "type": "string"
          },
          {
            "name": "order[orderDir]",
            "in": "path",
            "description": "Kind of ordering: asc or desc",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit[limit]",
            "in": "path",
            "description": "Number of record to display",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit[offset]",
            "in": "path",
            "description": "Number of record where to start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "filters[applicationIds][]",
            "in": "path",
            "description": "List of all application ids",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "filters[applicantSkills][]",
            "in": "path",
            "description": "List of all skill ids",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "filters[missionSkills][]",
            "in": "path",
            "description": "List of all mission skill ids",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "filters[missionTypes][]",
            "in": "path",
            "description": "List of all mission types: GOAL, TIME",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "filters[missionThemes][]",
            "in": "path",
            "description": "List of all themes ids",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "filters[missionCountries][]",
            "in": "path",
            "description": "List of all country ids",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "filters[missionCities][]",
            "in": "path",
            "description": "List of all city ids",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "filters[language]",
            "in": "path",
            "description": "Language",
            "required": false,
            "type": "string"
          },
          {
            "name": "filters[isVirtual]",
            "in": "path",
            "description": "Mission is_virtual",
            "required": false,
            "type": "boolean",
            "default": null
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          }
        }
      }
    },
    "/missions/{missionId}/applications/{applicationId}": {
      "get": {
        "operationId": "GET_team4-cip-api--missions-2-applications-1",
        "summary": "Admin - Get mission application detail (Milestone - 1)",
        "tags": [
          "Mission application"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "missionId",
            "in": "path",
            "description": "Mission id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "applicationId",
            "in": "path",
            "description": "Application id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          }
        }
      },
      "patch": {
        "operationId": "PATCH_team4-cip-api-missions-1-applications-1",
        "summary": "Admin - Update mission application (Milestone - 1)",
        "description": "Admin can approve/decline user's application on a mission",
        "tags": [
          "Mission application"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "approval_status": {
                  "type": "string",
                  "enum": [
                    "AUTOMATICALLY_APPROVED",
                    "PENDING",
                    "REFUSED"
                  ]
                }
              }
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "missionId",
            "in": "path",
            "description": "Mission id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "applicationId",
            "in": "path",
            "description": "Application id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          }
        }
      }
    },
    "/app/mission/application": {
      "post": {
        "operationId": "GET_team4-cip-api-apply-mission",
        "summary": "App - Apply to a mission (Milestone - 2)",
        "tags": [
          "Mission application"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "mission_id": {
                  "type": "integer",
                  "format": "int64"
                },
                "motivation": {
                  "type": "string"
                },
                "availability_id": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - Invalid token"
          },
          "404": {
            "description": "Requested mission not found"
          },
          "422": {
            "description": "Invalid input data"
          }
        }
      }
    },
    "/app/mission/{missionId}/volunteers": {
      "get": {
        "operationId": "GET_team4-cip-api-get-mission-volunteers",
        "summary": "App - Get mission volunteers(applications) (Milestone - 2)",
        "description": "Fetch mission volunteers for 'Recent Volunteers' section in front end",
        "tags": [
          "Mission application"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "missionId",
            "in": "path",
            "description": "Mission id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - Invalid token"
          },
          "404": {
            "description": "Requested mission not found"
          }
        }
      }
    },
    "/cms": {
      "get": {
        "operationId": "GET_team4-cip-api-cms",
        "summary": "Admin - List of footer pages (Milestone - 1)",
        "tags": [
          "Footer pages"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          }
        }
      },
      "post": {
        "operationId": "POST_team4-cip-api-cms",
        "summary": "Admin - Create Footer Page (Milestone - 1)",
        "tags": [
          "Footer pages"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FooterPage"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "422": {
            "description": "Invalid input"
          },
          "502": {
            "description": "Bad Gateway - Database operational error"
          }
        }
      }
    },
    "/cms/{pageId}": {
      "get": {
        "operationId": "GET_team4-cip-api-footer-page-by-id",
        "summary": "Admin - Get page detail by ID (Milestone - 1)",
        "tags": [
          "Footer pages"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "pageId",
            "in": "path",
            "description": "Page id to get detail",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "404": {
            "description": "Footer page not found in the system"
          }
        }
      },
      "patch": {
        "operationId": "PATCH_team4-cip-api-cms-2",
        "summary": "Admin - Update footer page (Milestone - 1)",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "Footer pages"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FooterPage"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "pageId",
            "in": "path",
            "description": "Page id to update",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "404": {
            "description": "Footer page not found in the system"
          },
          "422": {
            "description": "Invalid input"
          },
          "502": {
            "description": "Bad Gateway - Database operational error"
          }
        }
      },
      "delete": {
        "operationId": "DELETE_team4-cip-api-cms-2",
        "summary": "Admin - Delete footer page (Milestone - 1)",
        "tags": [
          "Footer pages"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "pageId",
            "in": "path",
            "description": "Page id to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "404": {
            "description": "Footer page not found in the system"
          }
        }
      }
    },
    "/app/cms/{slug}": {
      "get": {
        "operationId": "GET_team4-cip-api-cms-privacy-policy",
        "summary": "App - Get footer page content by slug (Milestone - 1)",
        "tags": [
          "Footer pages"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "Slug of page",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "502": {
            "description": "Bad Gateway - Database operational error"
          }
        }
      }
    },
    "/app/cms/listing": {
      "get": {
        "operationId": "GET_team4-cip-api-cms-listing",
        "summary": "App - Get footer pages listing (Milestone - 1)",
        "tags": [
          "Footer pages"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "responses": {}
      }
    },
    "/app/cms/detail": {
      "get": {
        "operationId": "GET_team4-cip-api-cms-detail",
        "summary": "App - Get Page detail (Milestone - 1)",
        "tags": [
          "Footer pages"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "responses": {
          "default": {
            "description": "",
            "schema": {}
          }
        }
      }
    },
    "/policy": {
      "get": {
        "operationId": "GET_team4-cip-api-get-policy-pages",
        "summary": "Admin - List of policy pages (Milestone - 3)",
        "tags": [
          "Policy pages"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          }
        }
      },
      "post": {
        "operationId": "POST_team4-cip-api-create-policy",
        "summary": "Admin - Create Policy Page (Milestone - 3)",
        "tags": [
          "Policy pages"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyPage"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "422": {
            "description": "Invalid input"
          },
          "502": {
            "description": "Bad Gateway - Database operational error"
          }
        }
      }
    },
    "/policy/{pageId}": {
      "get": {
        "operationId": "GET_team4-cip-api-policy-page-by-id",
        "summary": "Admin - Get policy page detail by ID (Milestone - 3)",
        "tags": [
          "Policy pages"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "pageId",
            "in": "path",
            "description": "Page id to get detail",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "404": {
            "description": "Policy page not found in the system"
          }
        }
      },
      "patch": {
        "operationId": "GET_team4-cip-api-update-policy-page-by",
        "summary": "Admin - Update policy page detail(Milestone - 3)",
        "tags": [
          "Policy pages"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "pageId",
            "in": "path",
            "description": "Page id to update",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FooterPage"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "404": {
            "description": "Policy page not found in the system"
          },
          "422": {
            "description": "Invalid input"
          },
          "502": {
            "description": "Bad Gateway - Database operational error"
          }
        }
      },
      "delete": {
        "operationId": "GET_team4-cip-api-delete-policy-page",
        "summary": "Admin - delete policy page (Milestone - 3)",
        "tags": [
          "Policy pages"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "pageId",
            "in": "path",
            "description": "Page id to get detail",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "404": {
            "description": "Policy page not found in the system"
          }
        }
      }
    },
    "/app/policy/listing": {
      "get": {
        "operationId": "GET_team4-cip-api-policy-listing",
        "summary": "App - Get policy pages listing (Milestone - 3)",
        "description": "It will list policy pages titles for top menu in platform",
        "tags": [
          "Policy pages"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - Invalid token"
          },
          "502": {
            "description": "Bad Gateway - Database operational error"
          }
        }
      }
    },
    "/app/policy/{slug}": {
      "get": {
        "operationId": "GET_team4-cip-api-policy-detail-by-slug",
        "summary": "App - Get policy pages detail by slug (Milestone - 3)",
        "tags": [
          "Policy pages"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "description": "Slug of page",
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - Invalid token"
          }
        }
      }
    },
    "/users?search={searchText}": {
      "get": {
        "operationId": "GET_team4-cip-api-users",
        "summary": "Admin - List of users (Milestone - 1)",
        "description": "This endpoint will list all users. To search users by their first name or last name append ?search=john in endpoint",
        "tags": [
          "User"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "searchText",
            "in": "path",
            "required": false,
            "type": "string",
            "default": ""
          },
          {
            "name": "field",
            "in": "path",
            "required": false,
            "type": "string",
            "description": "For ordering of user. Can be (fullName, firstName, email, volunteerStatus, country, language, lastName, email, title, email, department)"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          }
        }
      }
    },
    "/users": {
      "post": {
        "operationId": "POST_team4-cip-api-users",
        "summary": "Admin - Create user (Milestone - 1)",
        "tags": [
          "User"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "422": {
            "description": "Invalid input"
          },
          "502": {
            "description": "Bad Gateway - Database operational error"
          }
        }
      }
    },
    "/users/{userId}": {
      "patch": {
        "operationId": "POST_team4-cip-api-users-update",
        "summary": "Admin - Update user detail (Milestone - 1)",
        "tags": [
          "User"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "userId",
            "in": "path",
            "description": "User id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "404": {
            "description": "Not found - User does not found in system"
          },
          "422": {
            "description": "Invalid input"
          },
          "502": {
            "description": "Bad Gateway - Database operational error"
          }
        }
      },
      "get": {
        "operationId": "GET_team4-cip-api-users-5",
        "summary": "Admin - Get user by ID (Milestone - 1)",
        "tags": [
          "User"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "userId",
            "in": "path",
            "description": "User id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "404": {
            "description": "Not found - User does not found in system"
          }
        }
      },
      "delete": {
        "operationId": "DELETE_team4-cip-api-users-delete",
        "summary": "Admin - Delete user (Milestone - 1)",
        "tags": [
          "User"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "userId",
            "in": "path",
            "description": "User id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "404": {
            "description": "Not found - User does not found in system"
          }
        }
      }
    },
    "/users/{userId}/timesheet": {
      "get": {
        "operationId": "GET_team4-cip-api-users-timesheets",
        "summary": "Admin - Get tenant user timesheets",
        "description": "List of all the tenant user timesheet",
        "tags": [
          "User"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "User timesheet listed successfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "User timesheets not found"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          }
        }
      }
    },
    "/users/{userId}/timesheet-summary": {
      "get": {
        "operationId": "GET_team4-cip-api-users-timesheet-summary",
        "summary": "Admin - Get tenant user timesheet summary",
        "description": "List of the tenant user timesheet summary",
        "tags": [
          "User"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "User timesheet summarized successfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "404": {
            "description": "User not found in system"
          }
        }
      }
    },
    "/users/{userId}/volunteer-summary": {
      "get": {
        "operationId": "GET_team4-cip-api-users-volunteer-summary",
        "summary": "Admin - Get tenant user volunteer summary",
        "description": "List of the tenant user volunteer summary",
        "tags": [
          "User"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Volunteer summary retrieved successfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "404": {
            "description": "User not found in system"
          }
        }
      }
    },
    "/users/{userId}/content-statistics": {
      "get": {
        "operationId": "GET_team4-cip-api-users-content-statistics",
        "summary": "Admin - Get tenant user content statistics",
        "description": "List of the tenant user content statistics",
        "tags": [
          "User"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "User content statistics retrieved successfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "404": {
            "description": "User not found in system"
          }
        }
      }
    },
    "/metadata/users/custom_fields": {
      "get": {
        "operationId": "GET_team4-cip-api-metadata-users-custom_fields",
        "summary": "Admin - List of user custom fields (Milestone - 1)",
        "tags": [
          "User"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          }
        }
      },
      "post": {
        "operationId": "POST_team4-cip-api-metadata-users-custom_fields",
        "summary": "Admin - Create user custom fields (Milestone - 1)",
        "tags": [
          "User"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserCustomField"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "502": {
            "description": "Bad Gateway - Database operational error"
          }
        }
      }
    },
    "/metadata/users/custom_fields/{fieldId}": {
      "get": {
        "operationId": "GET_team4-cip-api-metadata-users-custom-field-detail",
        "summary": "Admin - View user custom field detail by ID (Milestone - 1)",
        "tags": [
          "User"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "fieldId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "404": {
            "description": "Not Found - Requested user custom field not exist"
          }
        }
      },
      "patch": {
        "operationId": "PATCH_team4-cip-api-metadata-users-custom_fields-1",
        "summary": "Admin - Update user custom field (Milestone - 1)",
        "tags": [
          "User"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserCustomFieldPatch"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "fieldId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "404": {
            "description": "Not Found - Requested user custom field not exist"
          },
          "502": {
            "description": "Bad Gateway - Database operational error"
          }
        }
      },
      "delete": {
        "operationId": "DELETE_team4-cip-api-metadata-users-custom_fields-2",
        "summary": "Admin - Delete user custom field (Milestone - 1)",
        "tags": [
          "User"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "fieldId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "404": {
            "description": "Not Found - Requested user custom field not exist"
          },
          "502": {
            "description": "Bad Gateway - Database operational error"
          }
        }
      }
    },
    "/app/login": {
      "post": {
        "operationId": "POST_team4-cip-api-login",
        "summary": "App - User login (Milestone - 1)",
        "tags": [
          "User"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "john.smith@optimy.com"
                },
                "password": {
                  "type": "string",
                  "example": "12345678"
                }
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "422": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/app/request-password-reset": {
      "post": {
        "operationId": "POST_team4-cip-api-request-password-reset",
        "summary": "App - Forgot password (Request reset password link) (Milestone - 1)",
        "tags": [
          "User"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden - Email address does not exist in the system"
          },
          "422": {
            "description": "Invalid input"
          },
          "502": {
            "description": "Bad Gateway - Database operational error"
          }
        }
      }
    },
    "/app/password-reset": {
      "put": {
        "operationId": "PUT_team4-cip-api-password-reset",
        "summary": "App - Reset password (Milestone - 1)",
        "tags": [
          "User"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "reset_password_token": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "password_confirmation": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "422": {
            "description": "Invalid input"
          },
          "502": {
            "description": "Bad Gateway - Database operational error"
          }
        }
      }
    },
    "/app/user?search={searchText}": {
      "get": {
        "operationId": "GET_team4-cip-api-app-search-user",
        "summary": "App - Search users by first name, last name and email (Autocomplete) (Milestone - 2)",
        "tags": [
          "User"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "searchText",
            "in": "path",
            "description": "Search term",
            "required": false,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized - Invalid token"
          }
        }
      }
    },
    "/app/user/upload-profile-image": {
      "patch": {
        "operationId": "PUT_team4-cip-api-change-profile-image",
        "summary": "App - Change profile image (Milestone - 3)",
        "description": "User can change profile image from user profile edit page from platform. Allowed image types are png, jpeg and jpg. Image should be base64 encoded.",
        "tags": [
          "User"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "avatar": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized - Invalid token"
          },
          "422": {
            "description": "Invalid input"
          },
          "502": {
            "description": "Bad Gateway - Database operational error"
          }
        }
      }
    },
    "/app/user-detail": {
      "get": {
        "operationId": "GET_team4-cip-api-get-user-detail",
        "summary": "App - Fetch user's detail for edit profile page (Milestone - 3)",
        "tags": [
          "User"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized - Invalid token"
          }
        }
      }
    },
    "/app/user": {
      "patch": {
        "operationId": "GET_team4-cip-api-update-user-detail",
        "summary": "App - Edit user's profile detail (Milestone - 3)",
        "description": "This API will update user's detail from edit profile page",
        "tags": [
          "User"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AppUser"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized - Invalid token"
          }
        }
      }
    },
    "/app/accept-cookie-agreement": {
      "post": {
        "operationId": "GET_team4-cip-api-accept-cookie-agreement",
        "summary": "App - Accept cookie agreement (Milestone - 4)",
        "description": "Store agreement date to db when user accepts cookie agreement policy after logged in",
        "tags": [
          "User"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized - Invalid token"
          }
        }
      }
    },
    "/users/{userId}/skills": {
      "get": {
        "operationId": "GET_team4-cip-api-entities-skills-1",
        "summary": "Admin - List skills of a user (Milestone - 1)",
        "tags": [
          "User skills"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "userId",
            "in": "path",
            "description": "User id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          }
        }
      },
      "post": {
        "operationId": "POST_team4-cip-api-entities-skills",
        "summary": "Admin - Link skills to a user (Milestone - 1)",
        "tags": [
          "User skills"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "skills": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "skill_id": {
                        "type": "integer",
                        "format": "int64"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "userId",
            "in": "path",
            "description": "User id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "502": {
            "description": "Bad Gateway - Database operational error"
          }
        }
      },
      "delete": {
        "operationId": "DELETE_team4-cip-api-skills",
        "summary": "Admin - Unlink skills from a user (Milestone - 1)",
        "tags": [
          "User skills"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "skills": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "skill_id": {
                        "type": "integer",
                        "format": "int64"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "userId",
            "in": "path",
            "description": "User id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "502": {
            "description": "Bad Gateway - Database operational error"
          }
        }
      }
    },
    "/users/invite": {
      "post": {
        "operationId": "POST_team4-cip-api-invite-user",
        "summary": "App - User invite (Request create password link) (Milestone - 1)",
        "tags": [
          "User"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "subject": {
                  "type": "string"
                },
                "body": {
                  "type": "string"
                },
                "language": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden - Email address does not exist in the system"
          },
          "422": {
            "description": "Invalid input"
          },
          "502": {
            "description": "Bad Gateway - Database operational error"
          }
        }
      }
    },
    "/users/password": {
      "patch": {
        "operationId": "POST_team4-cip-api-create-password",
        "summary": "App - Creates User Password (Milestone - 1)",
        "tags": [
          "User"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden - Email address does not exist in the system"
          },
          "422": {
            "description": "Invalid input"
          },
          "502": {
            "description": "Bad Gateway - Database operational error"
          }
        }
      }
    },
    "/entities/themes": {
      "post": {
        "operationId": "GET_team4-cip-api-add-theme",
        "summary": "Admin - add theme (Milestone - 2)",
        "tags": [
          "Theme management"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "theme_detail",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "theme_name": {
                  "type": "string"
                },
                "translations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "lang": {
                        "type": "string",
                        "description": "Language code"
                      },
                      "title": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "422": {
            "description": "Unprocessable entity - Invalid input"
          }
        }
      },
      "get": {
        "operationId": "GET_team4-cip-api-get-themes",
        "summary": "Admin - List themes (Milestone - 2)",
        "tags": [
          "Theme management"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          }
        }
      }
    },
    "/entities/themes/{themeId}": {
      "get": {
        "operationId": "GET_team4-cip-api-get-a-theme",
        "summary": "Admin - Get a theme detail (Milestone - 2)",
        "tags": [
          "Theme management"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "themeId",
            "in": "path",
            "description": "Theme id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "404": {
            "description": "Mission Theme does not found in system"
          }
        }
      },
      "patch": {
        "operationId": "GET_team4-cip-api-update-theme",
        "summary": "Admin - Update theme (Milestone - 2)",
        "tags": [
          "Theme management"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "themeId",
            "in": "path",
            "description": "Theme id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "theme_detail",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "theme_name": {
                  "type": "string"
                },
                "translations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "lang": {
                        "type": "string",
                        "description": "Language code"
                      },
                      "title": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "404": {
            "description": "Mission Theme does not found in system"
          }
        }
      },
      "delete": {
        "operationId": "GET_team4-cip-api-delete-theme",
        "summary": "Admin - Delete theme (Milestone - 2)",
        "tags": [
          "Theme management"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "themeId",
            "in": "path",
            "description": "Theme id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "404": {
            "description": "Mission Theme does not found in system"
          }
        }
      }
    },
    "/entities/skills": {
      "post": {
        "operationId": "GET_team4-cip-api-add-skill",
        "summary": "Admin - add skill (Milestone - 2)",
        "tags": [
          "Skill management"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "skill_detail",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "skill_name": {
                  "type": "string"
                },
                "parent_skill": {
                  "type": "integer",
                  "format": "int64"
                },
                "translations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "lang": {
                        "type": "string",
                        "description": "Language code"
                      },
                      "title": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "422": {
            "description": "Unprocessable entity - Invalid input"
          }
        }
      },
      "get": {
        "operationId": "GET_team4-cip-api-get-skills",
        "summary": "Admin - List skills (Milestone - 2)",
        "tags": [
          "Skill management"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          }
        }
      }
    },
    "/entities/skills/{skillId}": {
      "get": {
        "operationId": "GET_team4-cip-api-get-skill-by-id",
        "summary": "Admin - Get a skill detail (Milestone - 2)",
        "tags": [
          "Skill management"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "skillId",
            "in": "path",
            "description": "Skill id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "404": {
            "description": "Skill does not found in system"
          }
        }
      },
      "patch": {
        "operationId": "GET_team4-cip-api-update-skill",
        "summary": "Admin - Update skill (Milestone - 2)",
        "tags": [
          "Skill management"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "skillId",
            "in": "path",
            "description": "Skill id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "skill_detail",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "skill_name": {
                  "type": "string"
                },
                "parent_skill": {
                  "type": "integer",
                  "format": "int64"
                },
                "translations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "lang": {
                        "type": "string",
                        "description": "Language code"
                      },
                      "title": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "404": {
            "description": "Skill does not found in system"
          }
        }
      },
      "delete": {
        "operationId": "GET_team4-cip-api-delete-skill",
        "summary": "Admin - Delete skill (Milestone - 2)",
        "tags": [
          "Skill management"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "skillId",
            "in": "path",
            "description": "Skill id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "404": {
            "description": "Skill does not found in system"
          }
        }
      }
    },
    "/slider": {
      "get": {
        "operationId": "POST_team4-cip-api-get-all-slider-images",
        "summary": "Admin - Get slider images and text (Milestone - 1)",
        "tags": [
          "Tenant - Admin"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          }
        }
      },
      "post": {
        "operationId": "POST_team4-cip-api-store-slider",
        "summary": "Admin - Add slider images and text (Milestone - 1)",
        "description": "Tenant admin will add slider image and text which is visible on login screen of front end",
        "tags": [
          "Tenant - Admin"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string"
                },
                "translations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "lang": {
                        "type": "string",
                        "description": "Language code.(i.e. en, fr etc)"
                      },
                      "slider_title": {
                        "type": "string"
                      },
                      "slider_description": {
                        "type": "string"
                      }
                    }
                  }
                },
                "sort_order": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "502": {
            "description": "Bad Gateway - Database operational error"
          }
        }
      }
    },
    "/slider/{sliderId}": {
      "patch": {
        "operationId": "POST_team4-cip-api-update-slider",
        "summary": "Admin - Update slider images and text (Milestone - 1)",
        "description": "Tenant admin can update slider image and text which is visible on login screen of front end",
        "tags": [
          "Tenant - Admin"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "sliderId",
            "in": "path",
            "description": "Slider id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string"
                },
                "translations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "lang": {
                        "type": "string",
                        "description": "Language code.(i.e. en, fr etc)"
                      },
                      "slider_title": {
                        "type": "string"
                      },
                      "slider_description": {
                        "type": "string"
                      }
                    }
                  }
                },
                "sort_order": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "404": {
            "description": "Slider not found"
          },
          "502": {
            "description": "Bad Gateway - Database operational error"
          }
        }
      },
      "delete": {
        "operationId": "POST_team4-cip-api-delete-slider-images",
        "summary": "Admin - Delete slider images and text (Milestone - 1)",
        "tags": [
          "Tenant - Admin"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "sliderId",
            "in": "path",
            "description": "Slider id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "404": {
            "description": "Slider not found"
          }
        }
      }
    },
    "/style/download-style": {
      "get": {
        "operationId": "POST_team4-cip-api-download-style",
        "summary": "Admin - Listing of images and scss file to download from AWS S3 (Milestone - 1)",
        "description": "Its for custom styling - Tenant admin can download images and scss files used in platform, so admin can make changes in it and re-upload",
        "tags": [
          "Tenant - Admin"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "404": {
            "description": "No files found on S3 assets folder for this tenant"
          }
        }
      }
    },
    "/style/update-image": {
      "post": {
        "operationId": "POST_team4-cip-api-update-image",
        "summary": "Admin - Update icons/images (Milestone - 1)",
        "description": "Its for custom styling - Tenant admin can change icons/images used in platform(front end) and upload it from here.",
        "tags": [
          "Tenant - Admin"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "image_file",
            "in": "formData",
            "type": "file"
          },
          {
            "name": "image_name",
            "in": "formData",
            "required": true,
            "type": "string"
          },
          {
            "name": "_method",
            "in": "formData",
            "required": true,
            "type": "string",
            "default": "patch"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "404": {
            "description": "No files found on S3 assets folder for this tenant"
          }
        }
      }
    },
    "/style/update-style": {
      "post": {
        "operationId": "POST_team4-cip-api-style-update-style",
        "summary": "Admin - Update custom styling(Change primary color and upload customized scss) (Milestone - 1)",
        "description": "Its for custom styling - Tenant admin can make changes in raw css(scss) files and re-upload it from here. These raw css files can be downloaded using this endpoint(/style/download-style) described above",
        "tags": [
          "Tenant - Admin"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "primary_color",
            "in": "formData",
            "type": "string",
            "default": ""
          },
          {
            "name": "custom_scss_file",
            "in": "formData",
            "type": "file"
          },
          {
            "name": "custom_scss_file_name",
            "in": "formData",
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "502": {
            "description": "Bad Gateway - Database operational error"
          }
        }
      }
    },
    "/style/reset-style": {
      "get": {
        "operationId": "GET_team4-cip-api-style-reset-style",
        "summary": "Admin - Reset to default theme(Custom styling) (Milestone - 1)",
        "description": "Its for custom styling - Tenant admin can reset/revert css changes to default theme",
        "tags": [
          "Tenant - Admin"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          }
        }
      }
    },
    "/style/favicon": {
      "get": {
        "operationId": "GET_team4-cip-api-favicon",
        "summary": "Admin - Retrieve tenant favicon",
        "description": "Retrieve the tenant favicon url (if it exists).",
        "tags": [
          "Tenant - Admin"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "404": {
            "description": "No favicon found for the tenant"
          }
        }
      },
      "post": {
        "operationId": "POST_team4-cip-api-favicon",
        "summary": "Admin - Upload / Update tenant favicon",
        "description": "Upload (or update if it already exists) the tenant favicon.",
        "tags": [
          "Tenant - Admin"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "favicon",
            "in": "formData",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "404": {
            "description": "Unable to read the file specified in the favicon field"
          },
          "422": {
            "description": "The favicon field is required"
          }
        }
      }
    },
    "/tenant-option": {
      "post": {
        "operationId": "GET_team4-cip-api-save-tenant-option",
        "summary": "Admin - Store tenant options (Milestone - 2)",
        "description": "Tenant admin can save tenant options like no_mission_custom_text(Custom text if no mission on platform landing page), custom_logo etc.",
        "tags": [
          "Tenant - Admin"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "value",
            "in": "body",
            "description": "Value",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "option_name": {
                  "type": "string"
                },
                "option_value": {
                  "type": "object",
                  "properties": {
                    "translations": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "lang": {
                            "type": "string",
                            "description": "Language code"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "422": {
            "description": "Invalid input data"
          }
        }
      },
      "patch": {
        "operationId": "GET_team4-cip-api-update-tenant-option",
        "summary": "Admin - Update tenant options (Milestone - 2)",
        "description": "Tenant admin can update tenant options, option_name and option_value should be passed in json body. If option_value contains language data(e.g. when updating no_mission_custom_text, News banner text, Story banner text, cookie policy agreement text) then translations object should be passed. ",
        "tags": [
          "Tenant - Admin"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "value",
            "in": "body",
            "description": "Value",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "option_name": {
                  "type": "string"
                },
                "option_value": {
                  "type": "object",
                  "properties": {
                    "translations": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "lang": {
                            "type": "string",
                            "description": "Language code"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "422": {
            "description": "Invalid input data"
          }
        }
      }
    },
    "/tenant-settings": {
      "get": {
        "operationId": "GET_team4-cip-api-get-settings",
        "summary": "Admin - Get tenant settings (Milestone - 3)",
        "description": "Tenant settings like show Sorting missions, Quick access Filters in front end",
        "tags": [
          "Tenant - Admin"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "keys[]",
            "in": "path",
            "description": "List of all tenant setting keys",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          }
        }
      },
      "post": {
        "operationId": "GET_team4-cip-api-update-settings",
        "summary": "Admin - Update tenant settings (Milestone - 3)",
        "description": "Tenant admin can switch on/off tenant setting",
        "tags": [
          "Tenant - Admin"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "value",
            "in": "body",
            "description": "Value",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "settings": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "tenant_setting_id": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "value": {
                        "type": "integer",
                        "description": "If enable, value should be passed 1 and for disable value should be passed 0",
                        "enum": [
                          "1",
                          "0"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "422": {
            "description": "Invalid input data"
          }
        }
      }
    },
    "/tenant-settings/activated": {
      "get": {
        "operationId": "GET_team4-cip-api-get-activated-settings",
        "summary": "Admin - Get tenant activated settings (Milestone - 3)",
        "description": "List of all the activated tenant settings",
        "tags": [
          "Tenant - Admin"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "keys[]",
            "in": "path",
            "description": "List of all tenant setting keys",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Settings listed successfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          }
        }
      }
    },
    "/tenant-currencies": {
      "get": {
        "operationId": "GET-cip-api-get-activated-currencies",
        "summary": "Admin - Get tenant activated currencies",
        "description": "List of all the tenant activated currencies",
        "tags": [
          "Tenant - Admin"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Tenant activated currencies listed successfully | Tenant has no activated currencies"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          }
        }
      }
    },
    "/language/{isoCode}": {
      "get": {
        "operationId": "GET_team4-cip-api-skill",
        "summary": "App - Fetch language json(translations) data (Milestone - 1)",
        "description": "Fetch language translations(label, placeholders, messages etc.) for front end",
        "tags": [
          "Tenant - App"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "isoCode",
            "in": "path",
            "description": "Language code",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/app/custom-css": {
      "get": {
        "operationId": "GET_team4-cip-api-custom-css",
        "summary": "App - Get custom styling(css) file (Milestone - 1)",
        "description": "This API will fetch custom styling css file which could be modified by tenant admin. So front end can reflect those css changes.",
        "tags": [
          "Tenant - App"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "responses": {}
      }
    },
    "/app/custom-favicon": {
      "get": {
        "operationId": "GET_team4-cip-api-custom-favicon",
        "summary": "App - Get custom favicon url",
        "description": "This API will retrieve custom favicon url. So front end can use this favicon.",
        "tags": [
          "Tenant - App"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
        }
      }
    },
    "/app/connect": {
      "get": {
        "operationId": "GET_team4-cip-api-get-tenant-detail",
        "summary": "App - Fetch tenant details(e.g. logo, css, slider etc.) when front end loads (Milestone - 1)",
        "description": "When front end loads, this API will fetch some data like slider details, logo etc.",
        "tags": [
          "Tenant - App"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "responses": {}
      }
    },
    "/app/explore-mission": {
      "get": {
        "operationId": "GET_team4-cip-api-explore-mission",
        "summary": "App - Explore mission from top menu in front end (Milestone - 2)",
        "description": "In front end platform landing page - It will render drop-down values in Explore menu",
        "tags": [
          "Tenant - App"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - Invalid token"
          }
        }
      }
    },
    "/app/filter-data": {
      "get": {
        "operationId": "GET_team4-cip-api-filter-data",
        "summary": "App - Filter missions by country, city, theme, skill (Milestone - 2)",
        "description": "In front end platform landing page - filter missions by country, city, theme and skills drop-down",
        "tags": [
          "Tenant - App"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - Invalid token"
          }
        }
      }
    },
    "/app/tenant-option": {
      "post": {
        "operationId": "GET_team4-cip-api-get-tenant-option",
        "summary": "App - Get tenant option value by option name (Milestone - 2)",
        "description": "In front end - It will fetch particular option value by its name which is set by tenant admin. Example: it will fetch option_value (Custom text set by admin) for option_name(no_mission_custom_text)",
        "tags": [
          "Tenant - App"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "option_name": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - Invalid token"
          },
          "404": {
            "description": "Option name not found in system"
          },
          "422": {
            "description": "The option name field is required"
          }
        }
      }
    },
    "/app/tenant-settings": {
      "get": {
        "operationId": "GET_team4-cip-api-get-tenant-setting",
        "summary": "App - Get tenant settings (Milestone - 3)",
        "description": "In front end - It will fetch tenant settings set by tenant admin. Example: tenant admin has disabled 'sorting missions' then sorting block will not display in front end.",
        "tags": [
          "Tenant - App"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - Invalid token"
          }
        }
      }
    },
    "/app/tenant-currencies": {
      "get": {
        "operationId": "GET-cip-api-get-tenant-currency",
        "summary": "App - Get tenant currencies",
        "description": "Get the list of all the tenant activated currencies",
        "tags": [
          "Tenant - App"
        ],
        "responses": {
          "200": {
            "description": "Currencies listed successfully"
          },
          "401": {
            "description": "Unauthorized - Invalid token"
          },
          "403": {
            "description": "Forbidden - Required tenant setting is disabled"
          }
        }
      }
    },
    "/timesheet/total-hours": {
      "get": {
        "operationId": "GET_team4-cip-api-fetch-timesheet-data-admin",
        "summary": "Admin - Fetch sum of all users total hours timesheet data",
        "description": "Fetch approved mission applications sum of all users total hours to show on OptimyApp dashboard page",
        "tags": [
          "Volunteering Timesheet"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          }
        }
      }
    },
    "/timesheet/{userId}?status={status}&type={type}": {
      "get": {
        "operationId": "GET_team4-cip-api-fetch-user-timesheet-data-admin",
        "summary": "Admin - Fetch user's timesheet data (Milestone - 3)",
        "description": "Fetch approved mission applications to show on volunteering timesheet page",
        "tags": [
          "Volunteering Timesheet"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "userId",
            "in": "path",
            "description": "User id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "status",
            "in": "path",
            "description": "Status must have an integer value: 1 => PENDING, 2 => APPROVED, 3 => DECLINED, 4 => AUTOMATICALLY_APPROVED, 5 => SUBMIT_FOR_APPROVAL",
            "required": false,
            "type": "string",
            "default": ""
          },
          {
            "name": "type",
            "in": "path",
            "description": "Type should be either time or goal",
            "required": false,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "404": {
            "description": "User not found in system"
          }
        }
      }
    },
    "/timesheet/{timesheetId}": {
      "patch": {
        "operationId": "GET_team4-cip-api-update-timesheet-data",
        "summary": "Admin - Update timesheet entry(Milestone - 3)",
        "description": "Admin can update a submitted timesheet entry",
        "tags": [
          "Volunteering Timesheet"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "timesheetId",
            "in": "path",
            "description": "Timesheet id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "Values to update",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "APPROVED",
                    "DECLINED"
                  ],
                  "example": "APPROVED"
                },
                "notes": {
                  "type": "string",
                  "description": "Text area, a note in the timesheet"
                },
                "dateVolunteered": {
                  "type": "date",
                  "description": "Format yyyy-mm-dd",
                  "example": "2020-01-01"
                },
                "dayVolunteered": {
                  "type": "string",
                  "enum": [
                    "WORKDAY",
                    "HOLIDAY",
                    "WEEKEND"
                  ],
                  "example": "WORKDAY"
                },
                "hours": {
                  "type": "integer",
                  "description": "Add hours",
                  "example": "12"
                },
                "minutes": {
                  "type": "integer",
                  "description": "Add minutes",
                  "example": "45"
                },
                "action": {
                  "type": "integer",
                  "description": "Add action",
                  "example": "45"
                }
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "404": {
            "description": "Timesheet not found in system"
          }
        }
      }
    },
    "/app/timesheet": {
      "post": {
        "operationId": "GET_team4-cip-api-add-edit-timesheet-entry",
        "summary": "App - Add/update timesheet entry (Milestone - 3)",
        "description": "From front end user will add/edit timesheet entry for a day",
        "tags": [
          "Volunteering Timesheet"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "mission_id",
            "in": "formData",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "date_volunteered",
            "in": "formData",
            "description": "yyyy-mm-dd",
            "required": true,
            "type": "string",
            "format": "date-time",
            "default": ""
          },
          {
            "name": "day_volunteered",
            "in": "formData",
            "required": true,
            "type": "string",
            "enum": [
              "WORKDAY",
              "HOLIDAY",
              "WEEKEND"
            ]
          },
          {
            "name": "notes",
            "in": "formData",
            "type": "string",
            "multiLine": true,
            "default": ""
          },
          {
            "name": "action",
            "in": "formData",
            "description": "Add action for Goal mission",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "hours",
            "in": "formData",
            "description": "Add hours between 0-23 for Time mission",
            "required": false,
            "type": "int32",
            "default": ""
          },
          {
            "name": "minutes",
            "in": "formData",
            "description": "Add minutes between 0-59 for Time mission",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "documents[]",
            "in": "formData",
            "description": "Valid document types are doc, xls, xlsx, csv, pdf, png, jpg, jpeg",
            "required": false,
            "type": "file",
            "default": ""
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized - Invalid token"
          },
          "404": {
            "description": "Timesheet not found"
          },
          "422": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/app/timesheet?type={missionType}": {
      "get": {
        "operationId": "GET_team4-cip-api-fetch-timesheet-data",
        "summary": "App - Fetch timesheet data (Milestone - 3)",
        "description": "Fetch approved mission applications to show on volunteering timesheet page. Mission type either hour or goal must be passed in URL",
        "tags": [
          "Volunteering Timesheet"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "missionType",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "hour",
              "goal"
            ]
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized - Invalid token"
          },
          "404": {
            "description": "Timesheet not found"
          }
        }
      }
    },
    "/app/timesheet/{timesheetId}": {
      "get": {
        "operationId": "GET_team4-cip-api-fetch-timesheet-details",
        "summary": "App - Fetch timesheet entry details (Milestone - 3)",
        "description": "Fetch timesheet entry details",
        "tags": [
          "Volunteering Timesheet"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "timesheetId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized - Invalid token"
          },
          "404": {
            "description": "Timesheet not found"
          }
        }
      }
    },
    "/app/timesheet/{timesheetId}/document/{documentId}": {
      "delete": {
        "operationId": "GET_team4-cip-api-delete-timesheet-document",
        "summary": "App - Delete timesheet document (Milestone - 3)",
        "tags": [
          "Volunteering Timesheet"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "timesheetId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "documentId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized - Invalid token"
          },
          "404": {
            "description": "Timesheet not found"
          }
        }
      }
    },
    "/app/timesheet/submit": {
      "post": {
        "operationId": "GET_team4-cip-api-submit-timesheet",
        "summary": "App - Submit timesheet for approval (Milestone - 3)",
        "description": "Submits timesheet for approval",
        "tags": [
          "Volunteering Timesheet"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "timesheet_entries": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "timesheet_id": {
                        "type": "integer",
                        "format": "int32"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized - Invalid token"
          },
          "422": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/app/timesheet/goal-requests": {
      "get": {
        "operationId": "GET_team4-cip-api-fetch-pending-goal-requests",
        "summary": "App - Fetch Pending goal requests (Milestone - 3)",
        "description": "Fetch pending goal requests to show on volunteering timesheet page",
        "tags": [
          "Volunteering Timesheet"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized - Invalid token"
          }
        }
      }
    },
    "/app/timesheet/time-requests": {
      "get": {
        "operationId": "GET_team4-cip-api-fetch-pending-time-requests",
        "summary": "App - Fetch Pending time requests (Milestone - 3)",
        "description": "Fetch pending time requests to show on volunteering timesheet page",
        "tags": [
          "Volunteering Timesheet"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized - Invalid token"
          }
        }
      }
    },
    "/app/timesheet/goal-requests/export": {
      "get": {
        "operationId": "GET_team4-cip-api-pending-goal-missions-timesheet-export",
        "summary": "App - Export pending timesheet for goal mission (Milestone - 3)",
        "tags": [
          "Volunteering Timesheet"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized - Invalid token"
          }
        }
      }
    },
    "/app/timesheet/time-requests/export": {
      "get": {
        "operationId": "GET_team4-cip-api-pending-time-missions-timesheet-export",
        "summary": "App - Export pending timesheet for time mission (Milestone - 3)",
        "tags": [
          "Volunteering Timesheet"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized - Invalid token"
          }
        }
      }
    },
    "/app/volunteer/history/theme": {
      "get": {
        "operationId": "GET_team4-cip-api-fetch-hours-per-theme",
        "summary": "App - Get volunteers hours per theme (Milestone - 3)",
        "tags": [
          "Volunteering History"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized - Invalid token"
          }
        }
      }
    },
    "/app/volunteer/history/skill": {
      "get": {
        "operationId": "GET_team4-cip-api-fetch-hours-per-skill",
        "summary": "App - Get volunteers hours per skill (Milestone - 3)",
        "tags": [
          "Volunteering History"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized - Invalid token"
          }
        }
      }
    },
    "/app/volunteer/history/goal-mission": {
      "get": {
        "operationId": "GET_team4-cip-api-fetch-approved-goal-missions-timesheet",
        "summary": "App - Fetch approved timesheet for goal mission (Milestone - 3)",
        "tags": [
          "Volunteering History"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized - Invalid token"
          }
        }
      }
    },
    "/app/volunteer/history/time-mission": {
      "get": {
        "operationId": "GET_team4-cip-api-fetch-approved-time-missions-timesheet",
        "summary": "App - Fetch approved timesheet for time mission (Milestone - 3)",
        "tags": [
          "Volunteering History"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized - Invalid token"
          }
        }
      }
    },
    "/app/volunteer/history/time-mission/export": {
      "get": {
        "operationId": "GET_team4-cip-api-approved-time-missions-timesheet-export",
        "summary": "App - Export approved timesheet for time mission (Milestone - 3)",
        "tags": [
          "Volunteering History"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized - Invalid token"
          }
        }
      }
    },
    "/app/volunteer/history/goal-mission/export": {
      "get": {
        "operationId": "GET_team4-cip-api-approved-goal-missions-timesheet-export",
        "summary": "App - Export approved timesheet for goal mission (Milestone - 3)",
        "tags": [
          "Volunteering History"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized - Invalid token"
          }
        }
      }
    },
    "/news/category": {
      "get": {
        "operationId": "GET_team4-cip-api-get-news-categories",
        "summary": "Admin - News categories listing (Milestone - 4)",
        "tags": [
          "News"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          }
        }
      },
      "post": {
        "operationId": "POST_team4-cip-api-create-news-category",
        "summary": "Admin - Create News Category (Milestone - 4)",
        "tags": [
          "News"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewsCategory"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "422": {
            "description": "Invalid input"
          },
          "502": {
            "description": "Bad Gateway - Database operational error"
          }
        }
      }
    },
    "/news/category/{categoryId}": {
      "get": {
        "operationId": "GET_team4-cip-api-get-news-category",
        "summary": "Admin - Get news category by ID (Milestone - 4)",
        "tags": [
          "News"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "categoryId",
            "in": "path",
            "description": "Category id to get detail",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "404": {
            "description": "News category not found in system"
          }
        }
      },
      "patch": {
        "operationId": "GET_team4-cip-api-update-news-category",
        "summary": "Admin - Update news category (Milestone - 4)",
        "tags": [
          "News"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "categoryId",
            "in": "path",
            "description": "Category id to update",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewsCategory"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "404": {
            "description": "News category not found in system"
          }
        }
      },
      "delete": {
        "operationId": "GET_team4-cip-api-delete-news-category",
        "summary": "Admin - Delete news category (Milestone - 4)",
        "tags": [
          "News"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "categoryId",
            "in": "path",
            "description": "Category id to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "404": {
            "description": "News category not found in system"
          }
        }
      }
    },
    "/news": {
      "post": {
        "operationId": "POST_team4-cip-api-create-news",
        "summary": "Admin - Create News (Milestone - 4)",
        "tags": [
          "News"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/News"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "422": {
            "description": "Invalid input"
          },
          "502": {
            "description": "Bad Gateway - Database operational error"
          }
        }
      },
      "get": {
        "operationId": "POST_team4-cip-api-get-news-listing",
        "summary": "Admin - Listing News (Milestone - 4)",
        "tags": [
          "News"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          }
        }
      }
    },
    "/news/{newsId}": {
      "patch": {
        "operationId": "POST_team4-cip-api-update-news",
        "summary": "Admin - Update News (Milestone - 4)",
        "tags": [
          "News"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "newsId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/News"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "404": {
            "description": "News not found in system"
          },
          "422": {
            "description": "Invalid input"
          },
          "502": {
            "description": "Bad Gateway - Database operational error"
          }
        }
      },
      "get": {
        "operationId": "POST_team4-cip-api-get-news-detail",
        "summary": "Admin - Get News detail by ID(Milestone - 4)",
        "tags": [
          "News"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "newsId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "404": {
            "description": "News not found in system"
          }
        }
      },
      "delete": {
        "operationId": "POST_team4-cip-api-delete-news",
        "summary": "Admin - Delete News detail by ID(Milestone - 4)",
        "tags": [
          "News"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "newsId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "404": {
            "description": "News not found in system"
          }
        }
      }
    },
    "/app/news": {
      "get": {
        "operationId": "POST_team4-cip-api-get-news-listing-frontend",
        "summary": "App - Get News listing(Milestone - 4)",
        "description": "It will fetch only PUBLISHED news for front end",
        "tags": [
          "News"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - Invalid token"
          }
        }
      }
    },
    "/app/news/{newsId}": {
      "get": {
        "operationId": "POST_team4-cip-api-get-news-details-frontend",
        "summary": "App - Fetch News details(Milestone - 4)",
        "description": "It will fetch news details for front end",
        "tags": [
          "News"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "newsId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - Invalid token"
          },
          "404": {
            "description": "News not found in system"
          }
        }
      }
    },
    "/user/{userId}/stories": {
      "get": {
        "operationId": "POST_team4-cip-api-get-user-stories-admin",
        "summary": "Admin - Fetch all stories of a user(Milestone - 4)",
        "description": "This endpoint will fetch all stories of a user to list in backend",
        "tags": [
          "Story"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "404": {
            "description": "User not found in system"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/stories/{storyId}": {
      "patch": {
        "operationId": "POST_team4-cip-api-update-story-status",
        "summary": "Admin - Approve/Decline user story (Milestone - 4)",
        "Description": "Using this endpoint, admin can approve/decline user's story by its ID. To approve use 'PUBLISHED' and decline use 'DECLINED'",
        "tags": [
          "Story"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "storyId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "PUBLISHED",
                    "DECLINED"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "404": {
            "description": "Story not found in system"
          },
          "422": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/app/user/missions": {
      "get": {
        "operationId": "POST_team4-cip-api-get-user-missions",
        "summary": "App - Fetch user's missions (Milestone - 4)",
        "description": "This endpoint is created to select mission(from drop-down) while creating story from platform. It will return mission title and id for which user has applied and application is approved by admin",
        "tags": [
          "Story"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized - Invalid token"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/app/story": {
      "post": {
        "operationId": "POST_team4-cip-api-add-story",
        "summary": "App - Add story from front end (Milestone - 4)",
        "description": "User can add story from platform. When new story is added, it will be added as DRAFT",
        "tags": [
          "Story"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "mission_id",
            "description": "User will select a mission to which he has applied and its application is approved",
            "in": "formData",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "title",
            "in": "formData",
            "description": "Story title",
            "required": true,
            "type": "string"
          },
          {
            "name": "description",
            "in": "formData",
            "description": "Story description",
            "required": true,
            "type": "string"
          },
          {
            "name": "story_images[]",
            "in": "formData",
            "description": "Story images - Maximum 20 images can be uploaded, valid image types are: png, jpg, jpeg",
            "type": "file"
          },
          {
            "name": "story_videos",
            "in": "formData",
            "description": "User can add Youtube video links for story videos. Use comma to separate multiple URLs. Example: https://www.youtube.com/watch?v=bkyjiXSx6WE,https://www.youtube.com/watch?v=tI8ijLpZaHk",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized - Invalid token"
          },
          "422": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/app/story/{storyId}": {
      "get": {
        "operationId": "POST_team4-cip-api-get-story-detail",
        "summary": "App - Get story detail by story id (Milestone - 4)",
        "description": "Fetch story detail for Story detail page in platform",
        "tags": [
          "Story"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "storyId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized - Invalid token"
          },
          "404": {
            "description": "Story not found in the system"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "operationId": "POST_team4-cip-api-update-story",
        "summary": "App - Update story from front end (Milestone - 4)",
        "description": "User can update story details from platform.",
        "tags": [
          "Story"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "storyId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "mission_id",
            "description": "User will select a mission to which he has applied and its application is approved",
            "in": "formData",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "title",
            "in": "formData",
            "description": "Story title",
            "required": true,
            "type": "string"
          },
          {
            "name": "description",
            "in": "formData",
            "description": "Story description",
            "required": true,
            "type": "string"
          },
          {
            "name": "story_images[]",
            "in": "formData",
            "description": "Story images - Maximum 20 images can be uploaded, valid image types are: png, jpg, jpeg",
            "type": "file"
          },
          {
            "name": "story_videos",
            "in": "formData",
            "description": "User can add Youtube video links for story videos. Use comma to separate multiple URLs. Example: https://www.youtube.com/watch?v=bkyjiXSx6WE,https://www.youtube.com/watch?v=tI8ijLpZaHk",
            "type": "string"
          },
          {
            "name": "_method",
            "in": "formData",
            "type": "string",
            "default": "patch"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized - Invalid token"
          },
          "404": {
            "description": "Story not found in the system"
          },
          "422": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "operationId": "POST_team4-cip-api-delete-story",
        "summary": "App - Delete story from dashboard (Milestone - 4)",
        "description": "User can delete his stories from dashboard page.",
        "tags": [
          "Story"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "storyId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized - Invalid token"
          },
          "404": {
            "description": "Story not found in the system"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/app/story/{storyId}/submit": {
      "post": {
        "operationId": "POST_team4-cip-api-submit-story",
        "summary": "App - Submit story to admin for approval (Milestone - 4)",
        "tags": [
          "Story"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "storyId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized - Invalid token"
          },
          "404": {
            "description": "Story not found in the system"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/app/story/list": {
      "get": {
        "operationId": "POST_team4-cip-api-get-story-listing",
        "summary": "App - Get published stories (Milestone - 4)",
        "description": "Fetch all published stories for story listing page",
        "tags": [
          "Story"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized - Invalid token"
          },
          "404": {
            "description": "Story not found in the system"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/app/story/{storyId}/image/{imageId}": {
      "delete": {
        "operationId": "POST_team4-cip-api-delete-story-image",
        "summary": "App - Delete story image (Milestone - 4)",
        "description": "Delete story image from edit story page",
        "tags": [
          "Story"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "storyId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "imageId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized - Invalid token"
          },
          "404": {
            "description": "Story not found in the system"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/app/story/{storyId}/copy": {
      "get": {
        "operationId": "POST_team4-cip-api-copy-story",
        "summary": "App - Copy story (Milestone - 4)",
        "description": "User can copy DECLINED story",
        "tags": [
          "Story"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "storyId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized - Invalid token"
          },
          "404": {
            "description": "Story not found in the system"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/app/story/export": {
      "get": {
        "operationId": "POST_team4-cip-api-export-story",
        "summary": "App - Export stories (Milestone - 4)",
        "description": "User can export DECLINED story",
        "tags": [
          "Story"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized - Invalid token"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/app/edit/story/{storyId}": {
      "get": {
        "operationId": "POST_team4-cip-api-edit-story-detail",
        "summary": "App - Fetch story detail for edit story page (Milestone - 4)",
        "tags": [
          "Story"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "storyId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized - Invalid token"
          },
          "404": {
            "description": "Story not found in the system"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/app/story/invite": {
      "post": {
        "operationId": "POST_team4-cip-api-invite-story",
        "summary": "App - Invite story to a co-worker (Milestone - 4)",
        "tags": [
          "Story"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "story_id": {
                  "type": "integer",
                  "format": "int64"
                },
                "to_user_id": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized - Invalid token"
          },
          "404": {
            "description": "Story not found in the system"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/app/story/my-stories": {
      "get": {
        "operationId": "POST_team4-cip-api-get-my-stories",
        "summary": "App - My stories (Milestone - 4)",
        "description": "Fetch my stories for user dashboard on platform",
        "tags": [
          "Story"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized - Invalid token"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/app/dashboard?year={year}&month={month}&mission_id={missionId}": {
      "get": {
        "operationId": "POST_team4-cip-api-get-user-dashboard-data",
        "summary": "App - Fetch user's dashboard data (Milestone - 4)",
        "description": "This endpoint will fetch data for dashboard statistics and charts.",
        "tags": [
          "User Dashboard"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "year",
            "in": "path",
            "type": "integer",
            "format": "int64",
            "default": 2019
          },
          {
            "name": "month",
            "in": "path",
            "description": "Month from 01-12",
            "type": "integer",
            "format": "int64",
            "default": 10
          },
          {
            "name": "missionId",
            "in": "path",
            "description": "Filter by mission ID",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized - Invalid token"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/app/dashboard/comments": {
      "get": {
        "operationId": "POST_team4-cip-api-get-my-comments",
        "summary": "App - Fetch user's comments (Milestone - 4)",
        "description": "This endpoint will fetch all comments posted by user on missions for user dashboard comment history page",
        "tags": [
          "Dashboard - Comment History"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized - Invalid token"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/app/dashboard/comments/export": {
      "get": {
        "operationId": "POST_team4-cip-api-export-my-comments",
        "summary": "App - Export user's comments (Milestone - 4)",
        "description": "This endpoint will export all comments posted by user on missions",
        "tags": [
          "Dashboard - Comment History"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized - Invalid token"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/app/dashboard/comments/{commentId}": {
      "delete": {
        "operationId": "POST_team4-cip-api-delete-comment",
        "summary": "App - Delete comment from history page (Milestone - 4)",
        "description": "User can delete his comment from Comment history page in platform",
        "tags": [
          "Dashboard - Comment History"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "commentId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized - Invalid token"
          },
          "404": {
            "description": "Comment not found in the system"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/message/send": {
      "post": {
        "operationId": "POST_team4-cip-api-send-message-to-user",
        "summary": "Admin - Send message to user (Milestone - 4)",
        "Description": "Admin can send messages to a user using this endpoint",
        "tags": [
          "Messages"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "subject": {
                  "type": "string",
                  "description": "Maximum 255 characters are allowed"
                },
                "message": {
                  "type": "string"
                },
                "admin": {
                  "type": "string",
                  "description": "Admin can write his name which will display on platform. If its left blank then 'Anonymous user' will be seen to user"
                },
                "user_ids": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "Use comma to separate multiple user ids",
                    "default": "1,2"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "422": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/message/list": {
      "get": {
        "operationId": "POST_team4-cip-api-fetch-message-list",
        "summary": "Admin - Fetch message list (Milestone - 4)",
        "description": "This endpoint will list all messages for backend. To filter messages by users append ?users=1,2,3",
        "tags": [
          "Messages"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/message/{messageId}": {
      "delete": {
        "operationId": "POST_team4-cip-api-delete-message",
        "summary": "Admin - Delete message from admin (Milestone - 4)",
        "description": "Delete message from admin",
        "tags": [
          "Messages"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "messageId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "404": {
            "description": "Message not found in the system"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/message/read/{messageId}": {
      "post": {
        "operationId": "POST_team4-cip-api-read-unread-admin-message",
        "summary": "Admin - Read message from admin (Milestone - 4)",
        "tags": [
          "Messages"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "messageId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "404": {
            "description": "Message not found in the system"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/app/message/send": {
      "post": {
        "operationId": "POST_team4-cip-api-send-message-to-admin",
        "summary": "App - Send message to admin (Milestone - 4)",
        "Description": "User can send messages/report a bug to admin using this endpoint",
        "tags": [
          "Messages"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "subject": {
                  "type": "string",
                  "description": "Maximum 255 characters are allowed"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized - Invalid token"
          },
          "422": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/app/messages": {
      "get": {
        "operationId": "POST_team4-cip-api-fetch-messages-for-user-dashboard",
        "summary": "App - Fetch messages sent to user (Milestone - 4)",
        "description": "This endpoint will fetch all messages which are sent to user by admin",
        "tags": [
          "Messages"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized - Invalid token"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/app/message/{messageId}": {
      "delete": {
        "operationId": "POST_team4-cip-api-delete-message",
        "summary": "App - Delete message (Milestone - 4)",
        "description": "User can delete message which is sent by admin",
        "tags": [
          "Messages"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "messageId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized - Invalid token"
          },
          "404": {
            "description": "Message not found in the system"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/app/message/read/{messageId}": {
      "post": {
        "operationId": "POST_team4-cip-api-read-unread-user-message",
        "summary": "App - Read message (Milestone - 4)",
        "tags": [
          "Messages"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "messageId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized - Invalid token"
          },
          "404": {
            "description": "Message not found in the system"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/app/notification-settings": {
      "get": {
        "operationId": "POST_team4-cip-api-get-notification-settings",
        "summary": "App - Fetch notification settings (Milestone - 4)",
        "description": "This endpoint will fetch all notification types available in system, so user can select for which type he wants to receive notifications",
        "tags": [
          "Notifications"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized - Invalid token"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/app/user-notification-settings/update": {
      "post": {
        "operationId": "POST_team4-cip-api-get-enable-disable-notification-settings",
        "summary": "App - User can enable/disable notification types/settings (Milestone - 4)",
        "description": "Using this endpoint, user can select for which notification type he wants to receive notifications",
        "tags": [
          "Notifications"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "settings": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "notification_type_id": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "value": {
                        "type": "integer",
                        "format": "int32",
                        "enum": [
                          1,
                          0
                        ]
                      }
                    }
                  }
                },
                "user_settings": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "receive_email_notification": {
                        "type": "integer",
                        "format": "int32",
                        "enum": [
                          1,
                          0
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized - Invalid token"
          },
          "422": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/app/notifications": {
      "get": {
        "operationId": "POST_team4-cip-api-get-notifications",
        "summary": "App - Fetch user's notifications (Milestone - 4)",
        "tags": [
          "Notifications"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized - Invalid token"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/app/notification/read-unread/{notificationId}": {
      "post": {
        "operationId": "POST_team4-cip-api-read-unread-notifications",
        "summary": "App - Read/unread user's notifications (Milestone - 4)",
        "tags": [
          "Notifications"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "notificationId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized - Invalid token"
          },
          "404": {
            "description": "Notification not found in the system"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/app/notifications/clear": {
      "delete": {
        "operationId": "POST_team4-cip-api-clear-all-notifications",
        "summary": "App - Clear all notifications (Milestone - 4)",
        "tags": [
          "Notifications"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized - Invalid token"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/logs?type={type}&action={action}&user_type={userType}&users={users}&from_date={fromDate}&to_date={toDate}&order={order}": {
      "get": {
        "operationId": "POST_team4-cip-api-get-activity-logs",
        "summary": "Admin - Fetch activity logs (Milestone - 4)",
        "tags": [
          "Activity Log"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "type",
            "in": "path",
            "type": "string"
          },
          {
            "name": "action",
            "in": "path",
            "type": "string"
          },
          {
            "name": "userType",
            "in": "path",
            "type": "string",
            "enum": [
              "REGULAR",
              "API"
            ]
          },
          {
            "name": "users",
            "in": "path",
            "type": "integer",
            "description": "Use comma to separate multiple user ids",
            "format": "int32"
          },
          {
            "name": "from_date",
            "in": "path",
            "type": "string",
            "format": "date-time",
            "description": "yyyy-mm-dd"
          },
          {
            "name": "to_date",
            "in": "path",
            "type": "string",
            "format": "date-time",
            "description": "yyyy-mm-dd"
          },
          {
            "name": "order",
            "in": "path",
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ]
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/entities/availability": {
      "post": {
        "operationId": "POST_team4-cip-api-entities-availability",
        "summary": "Admin - Add availability",
        "tags": [
          "Availability"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "translations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "lang": {
                        "type": "string",
                        "description": "Language code.(i.e. en, fr etc)"
                      },
                      "title": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "502": {
            "description": "Bad Gateway - Database operational error"
          }
        }
      },
      "get": {
        "operationId": "GET_team4-cip-api-get-availability",
        "summary": "Admin - List availability",
        "tags": [
          "Availability"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          }
        }
      }
    },
    "/entities/availability/{availabilityId}": {
      "patch": {
        "operationId": "POST_team4-cip-api-entities-availability-update",
        "summary": "Admin - Update availability",
        "tags": [
          "Availability"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "translations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "lang": {
                        "type": "string",
                        "description": "Language code.(i.e. en, fr etc)"
                      },
                      "title": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "name": "availabilityId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "404": {
            "description": "Not found - Availability was not found in system"
          },
          "502": {
            "description": "Bad Gateway - Database operational error"
          }
        }
      },
      "get": {
        "operationId": "POST_team4-cip-api-get-entities-availability-detail",
        "summary": "Admin - View availability detail",
        "tags": [
          "Availability"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "availabilityId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "404": {
            "description": "Not found - Availability was not found in system"
          },
          "502": {
            "description": "Bad Gateway - Database operational error"
          }
        }
      },
      "delete": {
        "operationId": "POST_team4-cip-api-delete-entities-availability-detail",
        "summary": "Admin - Delete availability detail",
        "tags": [
          "Availability"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "availabilityId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "404": {
            "description": "Not found - Availability was not found in system"
          },
          "502": {
            "description": "Bad Gateway - Database operational error"
          }
        }
      }
    },
    "/app/country": {
      "get": {
        "operationId": "GET_cip-api-get-country",
        "summary": "App - Get country list",
        "tags": [
          "Country"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "detailed",
            "in": "path",
            "description": "If true, return the country list with more information",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - Invalid token"
          }
        }
      }
    },
    "/entities/countries": {
      "post": {
        "operationId": "POST_team4-cip-api-admin-add-country",
        "summary": "Admin - Add country",
        "description": "Admin can add country for their platform using this endpoint.",
        "tags": [
          "Country"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Country"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "422": {
            "description": "Unprocessable entity - Invalid input"
          },
          "502": {
            "description": "Bad Gateway - Database operational error"
          }
        }
      },
      "get": {
        "operationId": "GET_team4-cip-api-get-countries",
        "summary": "Admin - Get country list (Milestone - 3)",
        "tags": [
          "Country"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          }
        }
      }
    },
    "/entities/countries/{countryId}": {
      "get": {
        "operationId": "GET_team4-cip-api-get-a-country",
        "summary": "Admin - Get a country detail",
        "tags": [
          "Country"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "countryId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          }
        }
      },
      "patch": {
        "operationId": "POST_team4-cip-api-admin-update-country",
        "summary": "Admin - Update country",
        "description": "Admin can update country details.",
        "tags": [
          "Country"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "countryId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "iso": {
                  "type": "string",
                  "description": "Country ISO code"
                },
                "translations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "lang": {
                        "type": "string",
                        "description": "Language code.(i.e. en, fr etc)"
                      },
                      "name": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "404": {
            "description": "Country not found in the system"
          },
          "422": {
            "description": "Unprocessable entity - Invalid input"
          },
          "502": {
            "description": "Bad Gateway - Database operational error"
          }
        }
      },
      "delete": {
        "operationId": "POST_team4-cip-api-admin-delete-country",
        "summary": "Admin - Delete country",
        "description": "Admin can delete country from the platform.",
        "tags": [
          "Country"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "countryId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "404": {
            "description": "Country not found in the system"
          },
          "502": {
            "description": "Bad Gateway - Database operational error"
          }
        }
      }
    },
    "/entities/countries/{countryId}/cities": {
      "get": {
        "operationId": "GET_team4-cip-api-get-all-cities-by-country",
        "summary": "Admin - Get cities by country id (Milestone - 3)",
        "tags": [
          "City"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "countryId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "404": {
            "description": "Not found - Requested country does not exist"
          }
        }
      }
    },
    "/entities/cities": {
      "post": {
        "operationId": "POST_team4-cip-api-admin-add-city",
        "summary": "Admin - Add city",
        "description": "Admin can add city for their platform using this endpoint.",
        "tags": [
          "City"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/City"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "422": {
            "description": "Unprocessable entity - Invalid input"
          },
          "502": {
            "description": "Bad Gateway - Database operational error"
          }
        }
      },
      "get": {
        "operationId": "GET_team4-cip-api-get-all-cities",
        "summary": "Admin - Get city list",
        "tags": [
          "City"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          }
        }
      }
    },
    "/entities/cities/{cityId}": {
      "get": {
        "operationId": "GET_team4-cip-api-get-a-city",
        "summary": "Admin - Get a city detail",
        "tags": [
          "City"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "cityId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          }
        }
      },
      "patch": {
        "operationId": "POST_team4-cip-api-admin-update-city",
        "summary": "Admin - Update city",
        "description": "Admin can update city details.",
        "tags": [
          "City"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "cityId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "country_id": {
                  "type": "integer",
                  "format": "int32"
                },
                "state_id": {
                  "type": "integer",
                  "format": "int32"
                },
                "translations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "lang": {
                        "type": "string",
                        "description": "Language code.(i.e. en, fr etc)"
                      },
                      "name": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "404": {
            "description": "City not found in the system"
          },
          "422": {
            "description": "Unprocessable entity - Invalid input"
          },
          "502": {
            "description": "Bad Gateway - Database operational error"
          }
        }
      },
      "delete": {
        "operationId": "POST_team4-cip-api-admin-delete-city",
        "summary": "Admin - Delete city",
        "description": "Admin can delete city from the platform.",
        "tags": [
          "City"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "cityId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "404": {
            "description": "City not found in the system"
          },
          "502": {
            "description": "Bad Gateway - Database operational error"
          }
        }
      }
    },
    "/translations/generic/{isoCode}": {
      "get": {
        "operationId": "GET_team4-cip-api-get-translations-generic",
        "summary": "Admin - Fetch generic translations",
        "tags": [
          "Translations"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "isoCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Language ISO code. Example: To fetch English translations, use en; for French translations, use fr."
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "404": {
            "description": "Not found - Tenant language file not found"
          }
        }
      }
    },
    "/translations/custom/{isoCode}": {
      "get": {
        "operationId": "GET_team4-cip-api-get-language-file",
        "summary": "Admin - Fetch custom translations",
        "tags": [
          "Translations"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "isoCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Language ISO code. Example: To fetch English translations, use en; for French translations, use fr."
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "404": {
            "description": "Not found - Tenant language file not found"
          }
        }
      },
      "post": {
        "operationId": "GET_team4-cip-api-post-language-file-changes",
        "summary": "Admin - Update language file",
        "tags": [
          "Translations"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "isoCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Language ISO code. Example: To customize English translations, use en; to customize French translations, use fr."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "JSON encoded string containing all custom translations for the specified language. Translations not included in this structure will be inherited from original translations.",
            "schema": {
              "type": "object",
              "properties": {
                "label": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "text",
                      "example": "Translation text"
                    },
                    "code2": {
                      "type": "text",
                      "example": "Another translation"
                    }
                  }
                },
                "placeholder": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "text",
                      "example": "Translation text"
                    },
                    "code2": {
                      "type": "text",
                      "example": "Another translation"
                    }
                  }
                },
                "errors": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "text",
                      "example": "Translation text"
                    },
                    "code2": {
                      "type": "text",
                      "example": "Another translation"
                    }
                  }
                },
                "export_timesheet_file_names": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "text",
                      "example": "Translation text"
                    },
                    "code2": {
                      "type": "text",
                      "example": "Another translation"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "422": {
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/entities/states": {
      "post": {
        "operationId": "POST_team4-cip-api-admin-add-state",
        "summary": "Admin - Add state",
        "description": "Admin can add state for their platform using this endpoint.",
        "tags": [
          "State"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/State"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "422": {
            "description": "Unprocessable entity - Invalid input"
          },
          "502": {
            "description": "Bad Gateway - Database operational error"
          }
        }
      },
      "get": {
        "operationId": "GET_team4-cip-api-get-all-states",
        "summary": "Admin - Get states list",
        "tags": [
          "State"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          }
        }
      }
    },
    "/entities/states/{stateId}": {
      "patch": {
        "operationId": "POST_team4-cip-api-admin-update-state",
        "summary": "Admin - Update state",
        "description": "Admin can update state details.",
        "tags": [
          "State"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "stateId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "translations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "lang": {
                        "type": "string",
                        "description": "Language code.(i.e. en, fr etc)"
                      },
                      "name": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "404": {
            "description": "State not found in the system"
          },
          "422": {
            "description": "Unprocessable entity - Invalid input"
          },
          "502": {
            "description": "Bad Gateway - Database operational error"
          }
        }
      },
      "get": {
        "operationId": "GET_team4-cip-api-get-states detail by id",
        "summary": "Admin - Get states detail",
        "tags": [
          "State"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "stateId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          }
        }
      },
      "delete": {
        "operationId": "POST_team4-cip-api-admin-delete-state",
        "summary": "Admin - Delete state",
        "description": "Admin can delete state from the platform.",
        "tags": [
          "State"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "stateId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "404": {
            "description": "City not found in the system"
          },
          "502": {
            "description": "Bad Gateway - Database operational error"
          }
        }
      }
    },
    "/entities/countries/{countryId}/states": {
      "get": {
        "operationId": "GET_team4-cip-api-get-all-cities-by-country",
        "summary": "Admin - Get states by country id (Milestone - 3)",
        "tags": [
          "State"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "countryId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "404": {
            "description": "Not found - Requested country does not exist"
          }
        }
      }
    },
    "/timezone": {
      "get": {
        "operationId": "GET_team4-cip-api-get-timezone",
        "summary": "Admin - Fetch timezone list",
        "tags": [
          "Timezone"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          }
        }
      }
    },
    "/organizations": {
      "get": {
        "operationId": "GET_cip-api-get-organizations",
        "summary": "Admin - List of Organizations",
        "tags": [
          "Organizations"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          }
        }
      },
      "post": {
        "operationId": "POST_cip-api-post-organizations",
        "summary": "Admin - Create Organization",
        "tags": [
          "Organizations"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "legal_number": {
                  "type": "string"
                },
                "phone_number": {
                  "type": "string"
                },
                "address_line_1": {
                  "type": "string"
                },
                "address_line_2": {
                  "type": "string"
                },
                "city_id": {
                  "type": "integer"
                },
                "country_id": {
                  "type": "integer"
                },
                "postal_code": {
                  "type": "string"
                },
                "payment_gateway_account": {
                  "type": "object",
                  "properties": {
                    "payment_gateway": {
                      "type": "string",
                      "enum": [
                        "STRIPE"
                      ]
                    },
                    "payment_gateway_account_id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "422": {
            "description": "Invalid input"
          },
          "502": {
            "description": "Bad Gateway - Database operational error"
          }
        }
      }
    },
    "/organizations/{organizationId}": {
      "patch": {
        "operationId": "POST_cip-api-patch-organizations",
        "summary": "Admin - Update Organization",
        "tags": [
          "Organizations"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "legal_number": {
                  "type": "string"
                },
                "phone_number": {
                  "type": "string"
                },
                "address_line_1": {
                  "type": "string"
                },
                "address_line_2": {
                  "type": "string"
                },
                "city_id": {
                  "type": "integer"
                },
                "country_id": {
                  "type": "integer"
                },
                "postal_code": {
                  "type": "string"
                },
                "payment_gateway_account": {
                  "type": "object",
                  "properties": {
                    "payment_gateway": {
                      "type": "string",
                      "enum": [
                        "STRIPE"
                      ]
                    },
                    "payment_gateway_account_id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "422": {
            "description": "Invalid input"
          },
          "502": {
            "description": "Bad Gateway - Database operational error"
          }
        }
      },
      "delete": {
        "operationId": "POST_cip-api-delete-organizations",
        "summary": "Admin - Delete Organization",
        "tags": [
          "Organizations"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "404": {
            "description": "Organization not found in the system"
          },
          "502": {
            "description": "Bad Gateway - Database operational error"
          }
        }
      },
      "get": {
        "operationId": "POST_cip-api-get-organizations",
        "summary": "Admin - Get an organization detail",
        "tags": [
          "Organizations"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "404": {
            "description": "Organization not found in the system"
          },
          "502": {
            "description": "Bad Gateway - Database operational error"
          }
        }
      }
    },
    "/entities/donation-ip-whitelist": {
      "post": {
        "operationId": "POST_cip-api-admin-add-donation-ip-whitelist",
        "summary": "Admin - Add Donation IP Whitelist",
        "description": "Admin can add Donation IP Whitelist for their platform using this endpoint.",
        "tags": [
          "Donation IP Whitelist"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "pattern"
              ],
              "properties": {
                "pattern": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                }
              }
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "422": {
            "description": "Unprocessable entity - Invalid input"
          },
          "502": {
            "description": "Bad Gateway - Database operational error"
          }
        }
      },
      "get": {
        "operationId": "GET_cip-api-get-donation-ip-whitelists",
        "summary": "Admin - Get Donation IP Whitelists",
        "tags": [
          "Donation IP Whitelist"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "path",
            "description": "Result set page",
            "required": false,
            "type": "integer"
          },
          {
            "name": "perPage",
            "in": "path",
            "description": "Limit result set",
            "required": false,
            "type": "integer"
          },
          {
            "name": "search",
            "in": "path",
            "description": "Search donation IP whitelist on pattern or description",
            "required": false,
            "type": "string"
          },
          {
            "name": "order[orderBy]",
            "in": "path",
            "description": "Field name for ordering",
            "required": false,
            "type": "string"
          },
          {
            "name": "order[orderDir]",
            "in": "path",
            "description": "Kind of ordering: asc (default) or desc",
            "required": false,
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ]
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          }
        }
      }
    },
    "/entities/donation-ip-whitelist/{whitelistId}": {
      "patch": {
        "operationId": "PATCH_cip-api-admin-donation-ip-whitelist",
        "summary": "Admin - Update donation IP whitelist",
        "description": "Admin can update an donation IP whitelist details.",
        "tags": [
          "Donation IP Whitelist"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "whitelistId",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "Body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "pattern"
              ],
              "properties": {
                "pattern": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                }
              }
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "404": {
            "description": "State not found in the system"
          },
          "422": {
            "description": "Unprocessable entity - Invalid input"
          },
          "502": {
            "description": "Bad Gateway - Database operational error"
          }
        }
      },
      "delete": {
        "operationId": "DELETE_cip-api-admin-delete-donation-ip-whitelist",
        "summary": "Admin - Delete donation IP whitelist",
        "description": "Admin can delete donation IP whitelist from the platform.",
        "tags": [
          "Donation IP Whitelist"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "whitelistId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "404": {
            "description": "City not found in the system"
          },
          "502": {
            "description": "Bad Gateway - Database operational error"
          }
        }
      }
    },
    "/app/setting": {
      "post": {
        "operationId": "POST-cip-api-user-setting",
        "summary": "App - Post user settings",
        "description": "Logged in users can change password and update their profile settings",
        "tags": [
          "User setting"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "cookie",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "password": {
                  "type": "string"
                },
                "confirm_password": {
                  "type": "string"
                },
                "old_password": {
                  "type": "string"
                },
                "language_id": {
                  "type": "integer"
                },
                "timezone_id": {
                  "type": "integer"
                },
                "currency": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User profile settings updated successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - Invalid token"
          }
        }
      },
      "get": {
        "operationId": "GET-cip-api-user-setting",
        "summary": "App - Get user settings",
        "description": "Logged in users can retrieve their profile settings",
        "tags": [
          "User setting"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "cookie",
            "required": true,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "User profile settings retrieved successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - Invalid token"
          }
        }
      }
    },
    "/statistics/donations": {
      "get": {
        "operationId": "GET_cip-api-get-donation-statisics",
        "summary": "Admin - Get Donation Statistics",
        "tags": [
          "Statistics"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "date_ranges"
              ],
              "properties": {
                "date_ranges": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "Format: ['Y-M-D:Y-M-D','Y-M-D:Y-M-D']"
                  }
                }
              }
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - Invalid API key or secret key"
          },
          "422": {
            "description": "Unprocessable entity - Invalid input"
          },
          "502": {
            "description": "Bad Gateway - Database operational error"
          }
        }
      }
    }
  },
  "definitions": {
    "Mission": {
      "type": "object",
      "properties": {
        "location": {
          "type": "object",
          "properties": {
            "city_id": {
              "type": "string",
              "description": "City id from `city` table"
            },
            "country_code": {
              "type": "string",
              "description": "ISO code of country from `country` table"
            }
          }
        },
        "mission_detail": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "lang": {
                "type": "string",
                "description": "Language code e.g. en, fr, de etc."
              },
              "title": {
                "type": "string",
                "description": "Mission title"
              },
              "short_description": {
                "type": "string",
                "description": "Mission short description"
              },
              "objective": {
                "type": "string",
                "description": "If mission is Goal then add its objective. e.g. Plant 100 trees"
              },
              "label_goal_achieved": {
                "type": "string",
                "description": "If mission is Goal then add its label of goal achieved. e.g. Achieved goal"
              },
              "label_goal_objective": {
                "type": "string",
                "description": "If mission is Goal then add its label of objective. e.g Tree plantation"
              },
              "section": {
                "type": "array",
                "description": "These section are for 'Mission' tab in front end, you can add unlimited amount of sections(Title+description)",
                "items": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "Title of section"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of section"
                    }
                  }
                }
              },
              "custom_information": {
                "type": "array",
                "description": "This is for Custom Information in mission detail page. You will need to add title+description which will appear on Information section.",
                "items": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "Title"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description"
                    }
                  }
                }
              }
            }
          }
        },
        "mission_tabs": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "sort_key": {
                "type": "integer",
                "description": "Sort Order for mission tabs. It must be numeric value. Example: 0,1,2,3…"
              },
              "translations": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "lang": {
                      "type": "string",
                      "description": "Language code. Example: en, fr, es etc."
                    },
                    "name": {
                      "type": "string",
                      "description": "Tab heading name"
                    },
                    "sections": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "Title of section"
                          },
                          "content": {
                            "type": "string",
                            "description": "Description of section"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "organisation_detail": {
          "type": "array",
          "description": "Organisation detail.",
          "items": {
            "type": "object",
            "properties": {
              "lang": {
                "type": "string",
                "description": "Language code e.g. en, fr, de etc."
              },
              "detail": {
                "type": "string",
                "description": "Organisation detail"
              }
            }
          }
        },
        "documents": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "document_id": {
                "type": "integer",
                "description": "If adding new document then leave it blank",
                "format": "int64"
              },
              "document_path": {
                "type": "string",
                "description": "Url for document"
              },
              "sort_order": {
                "type": "integer",
                "description": "Mission document sort order",
                "format": "int64"
              }
            }
          }
        },
        "media_images": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "media_id": {
                "type": "integer",
                "description": "If adding new media then leave it blank",
                "format": "int64"
              },
              "media_path": {
                "type": "string",
                "description": "Url for media"
              },
              "internal_note": {
                "type": "string",
                "description": "Internal note describing the image"
              },
              "default": {
                "type": "int32",
                "enum": [
                  "1",
                  "0"
                ],
                "description": "If its set as 1, then mission thumbnail will be set to this media"
              },
              "sort_order": {
                "type": "integer",
                "description": "Mission media sort order ",
                "format": "int64"
              }
            }
          }
        },
        "media_videos": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "media_id": {
                "type": "integer",
                "description": "If adding new media then leave it blank",
                "format": "int64"
              },
              "media_name": {
                "type": "string",
                "description": "Name of the video"
              },
              "media_path": {
                "type": "string",
                "description": "Youtube url of a video"
              },
              "internal_note": {
                "type": "string",
                "description": "Internal note describing the video"
              },
              "sort_order": {
                "type": "integer",
                "description": "Mission media sort order",
                "format": "int64"
              }
            }
          }
        },
        "skills": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "skill_id": {
                "type": "integer",
                "format": "int64",
                "description": "Skill id from `skill` table"
              }
            }
          }
        },
        "impact": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "icon_path": {
                "type": "string",
                "description": "URL of mission impact icon"
              },
              "sort_key": {
                "type": "integer",
                "format": "int64"
              },
              "translations": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "language_code": {
                      "type": "string",
                      "description": "Language ISO code (e.g. en, fr)"
                    },
                    "content": {
                      "type": "string",
                      "description": "Mission impact description"
                    }
                  }
                }
              }
            }
          }
        },
        "impact_donation": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "amount": {
                "type": "integer",
                "description": "Impact donation amount"
              },
              "translations": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "language_code": {
                      "type": "string",
                      "description": "Language ISO code (e.g. en, fr)"
                    },
                    "content": {
                      "type": "string",
                      "description": "Impact donation description"
                    }
                  }
                }
              }
            }
          }
        },
        "start_date": {
          "type": "string",
          "format": "date-time",
          "description": "dd-mm-yyyy h:i:s - Mission start date"
        },
        "end_date": {
          "type": "string",
          "description": "dd-mm-yyyy h:i:s - Mission end date",
          "format": "date-time"
        },
        "mission_type": {
          "type": "string",
          "enum": [
            "TIME",
            "GOAL",
            "DONATION",
            "DISASTER_RELIEF",
            "EAF"
          ]
        },
        "goal_objective": {
          "type": "integer",
          "format": "int64"
        },
        "application_deadline": {
          "type": "string",
          "format": "date-time",
          "description": "dd-mm-yyyy h:i:s"
        },
        "application_start_date": {
          "type": "string",
          "format": "date-time",
          "description": "dd-mm-yyyy h:i:s"
        },
        "application_start_time": {
          "type": "string",
          "format": "date-time",
          "description": "dd-mm-yyyy h:i:s"
        },
        "application_end_date": {
          "type": "string",
          "format": "date-time",
          "description": "dd-mm-yyyy h:i:s"
        },
        "application_end_time": {
          "type": "string",
          "format": "date-time",
          "description": "dd-mm-yyyy h:i:s"
        },
        "publication_status": {
          "type": "string",
          "enum": [
            "DRAFT",
            "PENDING_APPROVAL",
            "APPROVED",
            "PUBLISHED_FOR_VOTING",
            "PUBLISHED_FOR_APPLYING",
            "UNPUBLISHED"
          ]
        },
        "theme_id": {
          "type": "integer",
          "format": "int64",
          "description": "mission_theme_id from `mission_theme` table"
        },
        "volunteering_attribute": {
          "type": "object",
          "properties": {
            "availability_id": {
              "type": "integer",
              "format": "int64",
              "description": "availability_id from `availability` table"
            },
            "is_virtual": {
              "type": "boolean"
            },
            "total_seats": {
              "type": "integer",
              "format": "int64",
              "description": "Total seats for this mission"
            }
          }
        },
        "un_sdg": {
          "type": "array",
          "description": "Array of valid UN SDG numbers (1 to 17)",
          "example": [
            1,
            2,
            3
          ]
        },
        "organization": {
          "type": "object",
          "properties": {
            "organization_id": {
              "type": "string",
              "description": "This id is reference to organization table"
            },
            "name": {
              "type": "string",
              "description": "Organization name"
            },
            "legal_number": {
              "type": "string",
              "description": "Organization legal number"
            },
            "phone_number": {
              "type": "integer",
              "description": "Organization phone number"
            },
            "address_line_1": {
              "type": "string",
              "description": "Organization address line 1"
            },
            "address_line_2": {
              "type": "string",
              "description": "Organization address line 2"
            },
            "city_id": {
              "type": "integer",
              "description": "Organization city"
            },
            "country_id": {
              "type": "integer",
              "description": "Organization country"
            },
            "postal_code": {
              "type": "string",
              "description": "Organization postal code"
            },
            "payment_gateway_account": {
              "type": "object",
              "properties": {
                "payment_gateway": {
                  "type": "string",
                  "enum": [
                    "STRIPE"
                  ]
                },
                "payment_gateway_account_id": {
                  "type": "string"
                }
              }
            }
          }
        },
        "donation_attribute": {
          "type": "object",
          "properties": {
            "goal_amount_currency": {
              "type": "string",
              "description": "Goal amount's currency"
            },
            "goal_amount": {
              "type": "integer",
              "description": "Goal amount for donation"
            },
            "show_goal_amount": {
              "type": "boolean"
            },
            "show_donation_percentage": {
              "type": "boolean"
            },
            "show_donation_meter": {
              "type": "boolean"
            },
            "show_donation_count": {
              "type": "boolean"
            },
            "show_donors_count": {
              "type": "boolean"
            },
            "disable_when_funded": {
              "type": "boolean"
            },
            "is_disabled": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "MissionUpdate": {
      "type": "object",
      "properties": {
        "location": {
          "type": "object",
          "properties": {
            "city_id": {
              "type": "string",
              "description": "City id from `city` table"
            },
            "country_code": {
              "type": "string",
              "description": "ISO code of country from `country` table"
            }
          }
        },
        "mission_detail": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "lang": {
                "type": "string",
                "description": "Language code e.g. en, fr, de etc."
              },
              "title": {
                "type": "string",
                "description": "Mission title"
              },
              "short_description": {
                "type": "string",
                "description": "Mission short description"
              },
              "objective": {
                "type": "string",
                "description": "If mission is Goal then add its objective. e.g. Plant 100 trees"
              },
              "label_goal_achieved": {
                "type": "string",
                "description": "If mission is Goal then add its label of goal achieved. e.g. Achieved goal"
              },
              "label_goal_objective": {
                "type": "string",
                "description": "If mission is Goal then add its label of objective. e.g Tree plantation"
              },
              "section": {
                "type": "array",
                "description": "These section are for 'Mission' tab in front end, you can add unlimited amount of sections(Title+description)",
                "items": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "Title of section"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of section"
                    }
                  }
                }
              },
              "custom_information": {
                "type": "array",
                "description": "This is for Custom Information in mission detail page. You will need to add title+description which will appear on Information section.",
                "items": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "Title"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description"
                    }
                  }
                }
              }
            }
          }
        },
        "mission_tabs": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "mission_tab_id": {
                "type": "string",
                "description": "Provide mission_tab_id to update an existing record"
              },
              "sort_key": {
                "type": "integer",
                "description": "Sort Order for mission tabs. It must be numeric value. Example: 0,1,2,3…"
              },
              "translations": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "lang": {
                      "type": "string",
                      "description": "Language code. Example: en, fr, es etc."
                    },
                    "name": {
                      "type": "string",
                      "description": "Tab heading name"
                    },
                    "sections": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "Title of section"
                          },
                          "content": {
                            "type": "string",
                            "description": "Description of section"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "organisation_detail": {
          "type": "array",
          "description": "Organisation detail.",
          "items": {
            "type": "object",
            "properties": {
              "lang": {
                "type": "string",
                "description": "Language code e.g. en, fr, de etc."
              },
              "detail": {
                "type": "string",
                "description": "Organisation detail"
              }
            }
          }
        },
        "documents": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "document_id": {
                "type": "integer",
                "description": "If adding new document then leave it blank",
                "format": "int64"
              },
              "document_path": {
                "type": "string",
                "description": "Url for document"
              },
              "sort_order": {
                "type": "integer",
                "description": "Mission document sort order",
                "format": "int64"
              }
            }
          }
        },
        "media_images": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "media_id": {
                "type": "integer",
                "description": "If adding new media then leave it blank",
                "format": "int64"
              },
              "media_path": {
                "type": "string",
                "description": "Url for media"
              },
              "internal_note": {
                "type": "string",
                "description": "Internal note describing the image"
              },
              "default": {
                "type": "int32",
                "enum": [
                  "1",
                  "0"
                ],
                "description": "If its set as 1, then mission thumbnail will be set to this media"
              },
              "sort_order": {
                "type": "integer",
                "description": "Mission media sort order ",
                "format": "int64"
              }
            }
          }
        },
        "media_videos": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "media_id": {
                "type": "integer",
                "description": "If adding new media then leave it blank",
                "format": "int64"
              },
              "media_name": {
                "type": "string",
                "description": "Name of the video"
              },
              "media_path": {
                "type": "string",
                "description": "Youtube url of a video"
              },
              "internal_note": {
                "type": "string",
                "description": "Internal note describing the video"
              },
              "sort_order": {
                "type": "integer",
                "description": "Mission media sort order",
                "format": "int64"
              }
            }
          }
        },
        "skills": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "skill_id": {
                "type": "integer",
                "format": "int64",
                "description": "Skill id from `skill` table"
              }
            }
          }
        },
        "impact": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "mission_impact_id": {
                "type": "string",
                "description": "Required only when updating an existing mission impact"
              },
              "icon_path": {
                "type": "string",
                "description": "URL of mission impact icon"
              },
              "sort_key": {
                "type": "integer",
                "format": "int64"
              },
              "translations": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "language_code": {
                      "type": "string",
                      "description": "Language ISO code (e.g. en, fr)"
                    },
                    "content": {
                      "type": "string",
                      "description": "Mission impact description"
                    }
                  }
                }
              }
            }
          }
        },
        "impact_donation": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "impact_donation_id": {
                "type": "string",
                "description": "Required only when updating an existing impact donation"
              },
              "amount": {
                "type": "integer",
                "description": "Impact donation amount"
              },
              "translations": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "language_code": {
                      "type": "string",
                      "description": "Language ISO code (e.g. en, fr)"
                    },
                    "content": {
                      "type": "string",
                      "description": "Impact donation description"
                    }
                  }
                }
              }
            }
          }
        },
        "start_date": {
          "type": "string",
          "format": "date-time",
          "description": "dd-mm-yyyy h:i:s - Mission start date"
        },
        "end_date": {
          "type": "string",
          "description": "dd-mm-yyyy h:i:s - Mission end date",
          "format": "date-time"
        },
        "mission_type": {
          "type": "string",
          "enum": [
            "TIME",
            "GOAL",
            "DONATION",
            "DISASTER_RELIEF",
            "EAF"
          ]
        },
        "goal_objective": {
          "type": "integer",
          "format": "int64"
        },
        "application_deadline": {
          "type": "string",
          "format": "date-time",
          "description": "dd-mm-yyyy h:i:s"
        },
        "application_start_date": {
          "type": "string",
          "format": "date-time",
          "description": "dd-mm-yyyy h:i:s"
        },
        "application_start_time": {
          "type": "string",
          "format": "date-time",
          "description": "dd-mm-yyyy h:i:s"
        },
        "application_end_date": {
          "type": "string",
          "format": "date-time",
          "description": "dd-mm-yyyy h:i:s"
        },
        "application_end_time": {
          "type": "string",
          "format": "date-time",
          "description": "dd-mm-yyyy h:i:s"
        },
        "publication_status": {
          "type": "string",
          "enum": [
            "DRAFT",
            "PENDING_APPROVAL",
            "APPROVED",
            "PUBLISHED_FOR_VOTING",
            "PUBLISHED_FOR_APPLYING",
            "UNPUBLISHED"
          ]
        },
        "theme_id": {
          "type": "integer",
          "format": "int64",
          "description": "mission_theme_id from `mission_theme` table"
        },
        "volunteering_attribute": {
          "type": "object",
          "properties": {
            "availability_id": {
              "type": "integer",
              "format": "int64",
              "description": "availability_id from `availability` table"
            },
            "is_virtual": {
              "type": "boolean"
            },
            "total_seats": {
              "type": "integer",
              "format": "int64",
              "description": "Total seats for this mission"
            }
          }
        },
        "un_sdg": {
          "type": "array",
          "description": "Array of valid UN SDG numbers (1 to 17)",
          "example": [
            1,
            2,
            3
          ]
        },
        "organization": {
          "type": "object",
          "properties": {
            "organization_id": {
              "type": "string",
              "description": "This id is reference to organization table"
            },
            "name": {
              "type": "string",
              "description": "Organization name"
            },
            "legal_number": {
              "type": "string",
              "description": "Organization legal number"
            },
            "phone_number": {
              "type": "integer",
              "description": "Organization phone number"
            },
            "address_line_1": {
              "type": "string",
              "description": "Organization address line 1"
            },
            "address_line_2": {
              "type": "string",
              "description": "Organization address line 2"
            },
            "city_id": {
              "type": "integer",
              "description": "Organization city"
            },
            "country_id": {
              "type": "integer",
              "description": "Organization country"
            },
            "postal_code": {
              "type": "string",
              "description": "Organization postal code"
            },
            "payment_gateway_account": {
              "type": "object",
              "properties": {
                "payment_gateway": {
                  "type": "string",
                  "enum": [
                    "STRIPE"
                  ]
                },
                "payment_gateway_account_id": {
                  "type": "string"
                }
              }
            }
          }
        },
        "donation_attribute": {
          "type": "object",
          "properties": {
            "goal_amount_currency": {
              "type": "string",
              "description": "Goal amount's currency"
            },
            "goal_amount": {
              "type": "integer",
              "description": "Goal amount for donation"
            },
            "show_goal_amount": {
              "type": "boolean"
            },
            "show_donation_percentage": {
              "type": "boolean"
            },
            "show_donation_meter": {
              "type": "boolean"
            },
            "show_donation_count": {
              "type": "boolean"
            },
            "show_donors_count": {
              "type": "boolean"
            },
            "disable_when_funded": {
              "type": "boolean"
            },
            "is_disabled": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "FooterPage": {
      "type": "object",
      "properties": {
        "page_details": {
          "type": "object",
          "properties": {
            "slug": {
              "type": "string"
            },
            "translations": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "lang": {
                    "type": "string",
                    "description": "Language code.(i.e. en, fr etc)"
                  },
                  "title": {
                    "type": "string"
                  },
                  "sections": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "title": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "PolicyPage": {
      "type": "object",
      "properties": {
        "page_details": {
          "type": "object",
          "properties": {
            "slug": {
              "type": "string"
            },
            "translations": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "lang": {
                    "type": "string",
                    "description": "Language code.(i.e. en, fr etc)"
                  },
                  "title": {
                    "type": "string"
                  },
                  "sections": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "title": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "timezone_id": {
          "type": "integer",
          "format": "int32"
        },
        "availability_id": {
          "type": "integer",
          "format": "int32"
        },
        "why_i_volunteer": {
          "type": "string"
        },
        "employee_id": {
          "type": "string"
        },
        "department": {
          "type": "string"
        },
        "city_id": {
          "type": "integer",
          "format": "int32"
        },
        "country_id": {
          "type": "integer",
          "format": "int32"
        },
        "profile_text": {
          "type": "string"
        },
        "linked_in_url": {
          "type": "string"
        },
        "custom_fields": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "field_id": {
                "type": "integer",
                "format": "int32"
              },
              "value": {
                "type": "string"
              }
            }
          }
        },
        "status": {
          "type": "integer",
          "description": "1 => Active, 0 => Inactive",
          "enum": [
            "1",
            "0"
          ]
        },
        "language_id": {
          "type": "integer",
          "format": "int32"
        },
        "title": {
          "type": "string"
        },
        "expiry": {
          "type": "string",
          "format": "date-time",
          "description": "yyyy-mm-dd hh:mm:ss 24-hour format in UTC"
        },
        "position": {
          "type": "string"
        },
        "invitation_sent_at": {
          "type": "string",
          "format": "date-time",
          "description": "yyyy-mm-dd hh:mm:ss 24-hour format in UTC"
        }
      }
    },
    "AppUser": {
      "type": "object",
      "properties": {
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "timezone_id": {
          "type": "integer",
          "format": "int32"
        },
        "language_id": {
          "type": "integer",
          "format": "int32"
        },
        "availability_id": {
          "type": "integer",
          "format": "int32"
        },
        "why_i_volunteer": {
          "type": "string"
        },
        "employee_id": {
          "type": "string"
        },
        "department": {
          "type": "string"
        },
        "manager_name": {
          "type": "string"
        },
        "city_id": {
          "type": "integer",
          "format": "int32"
        },
        "country_id": {
          "type": "integer",
          "format": "int32"
        },
        "profile_text": {
          "type": "string"
        },
        "linked_in_url": {
          "type": "string"
        },
        "custom_fields": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "field_id": {
                "type": "integer",
                "format": "int32"
              },
              "value": {
                "type": "string"
              }
            }
          }
        },
        "skills": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "skill_id": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "donation_goal": {
          "type": "integer"
        },
        "donation_goal_year": {
          "type": "integer"
        }
      }
    },
    "UserCustomFieldPatch": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "text",
            "email",
            "drop-down",
            "radio",
            "checkbox",
            "multiselect",
            "textarea"
          ]
        },
        "order": {
          "type": "integer",
          "format": "int32",
          "description": "Field order"
        },
        "translations": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "lang": {
                "type": "string",
                "description": "Language code"
              },
              "name": {
                "type": "string"
              },
              "values": {
                "type": "string"
              }
            }
          }
        },
        "is_mandatory": {
          "type": "boolean"
        },
        "internal_note": {
          "type": "string"
        }
      }
    },
    "UserCustomField": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "text",
            "email",
            "drop-down",
            "radio",
            "checkbox",
            "multiselect",
            "textarea"
          ]
        },
        "translations": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "lang": {
                "type": "string",
                "description": "Language code"
              },
              "name": {
                "type": "string"
              },
              "values": {
                "type": "string"
              }
            }
          }
        },
        "is_mandatory": {
          "type": "boolean"
        },
        "internal_note": {
          "type": "string"
        }
      }
    },
    "Slider": {
      "type": "object",
      "properties": {
        "translations": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "lang": {
                "type": "string",
                "description": "Language code"
              },
              "slider_title": {
                "type": "string"
              },
              "slider_description": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "NewsCategory": {
      "type": "object",
      "properties": {
        "category_name": {
          "type": "string"
        },
        "translations": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "lang": {
                "type": "string",
                "description": "Language code.(i.e. en, fr etc)"
              },
              "title": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "News": {
      "type": "object",
      "properties": {
        "news_category_id": {
          "type": "integer",
          "format": "int32"
        },
        "news_content": {
          "type": "object",
          "properties": {
            "translations": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "lang": {
                    "type": "string",
                    "description": "Language code.(i.e. en, fr etc)"
                  },
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "news_image": {
          "type": "string"
        },
        "user_name": {
          "type": "string"
        },
        "user_title": {
          "type": "string"
        },
        "user_thumbnail": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "PUBLISHED",
            "UNPUBLISHED"
          ]
        }
      }
    },
    "Country": {
      "type": "object",
      "properties": {
        "countries": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "iso": {
                "type": "string",
                "description": "Country ISO code"
              },
              "translations": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "lang": {
                      "type": "string",
                      "description": "Language code.(i.e. en, fr etc)"
                    },
                    "name": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "City": {
      "type": "object",
      "properties": {
        "country_id": {
          "type": "integer",
          "format": "int32"
        },
        "state_id": {
          "type": "integer",
          "format": "int32"
        },
        "cities": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "translations": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "lang": {
                      "type": "string",
                      "description": "Language code.(i.e. en, fr etc)"
                    },
                    "name": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "State": {
      "type": "object",
      "properties": {
        "country_id": {
          "type": "integer",
          "format": "int32"
        },
        "states": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "translations": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "lang": {
                      "type": "string",
                      "description": "Language code.(i.e. en, fr etc)"
                    },
                    "name": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
